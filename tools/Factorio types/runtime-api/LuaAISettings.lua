---@meta _

--$Factorio 2.0.9
--$Generator 1.1.47
--$Section runtime-api/LuaAISettings
-- This file is automatically generated. Edits will be overwritten without warning.

do
---Collection of settings for overriding default ai behavior.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaAISettings.html)
---@class LuaAISettings:LuaObject
---If enabled, units that repeatedly fail to succeed at commands will be destroyed.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaAISettings.html#allow_destroy_when_commands_fail)
---@field allow_destroy_when_commands_fail boolean
---If enabled, units that have nothing else to do will attempt to return to a spawner.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaAISettings.html#allow_try_return_to_spawner)
---@field allow_try_return_to_spawner boolean
---If enabled, units will try to separate themselves from nearby friendly units.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaAISettings.html#do_separation)
---@field do_separation boolean
---The class name of this object. Available even when `valid` is false. For LuaStruct objects it may also be suffixed with a dotted path to a member of the struct.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaAISettings.html#object_name)
---@field object_name string
---Defines how coarse the pathfinder's grid is, where smaller values mean a coarser grid. Defaults to `0`, which equals a resolution of `1x1` tiles, centered on tile centers. Values range from `-8` to `8` inclusive, where each integer increment doubles/halves the resolution. So, a resolution of `-8` equals a grid of `256x256` tiles, and a resolution of `8` equals `1/256` of a tile.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaAISettings.html#path_resolution_modifier)
---@field path_resolution_modifier int8
---Is this object valid? This Lua object holds a reference to an object within the game engine. It is possible that the game-engine object is removed whilst a mod still holds the corresponding Lua object. If that happens, the object becomes invalid, i.e. this attribute will be `false`. Mods are advised to check for object validity if any change to the game state might have occurred between the creation of the Lua object and its access.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaAISettings.html#valid)
---@field valid boolean
local LuaAISettings={
}
end

