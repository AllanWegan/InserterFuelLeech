---@meta _

--$Factorio 2.0.9
--$Generator 1.1.47
--$Section runtime-api/LuaRailEnd
-- This file is automatically generated. Edits will be overwritten without warning.

do
---Utility object that binds to a rail entity and rail\_direction to allow easier traversal over rails
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRailEnd.html)
---@class LuaRailEnd:LuaObject
---Location of the alternative incoming signal, which goes to the right relative to the rail end movement. Not all places have alternative incoming signal spot, so when it is not available, a nil will be given instead
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRailEnd.html#alternative_in_signal_location)
---@field alternative_in_signal_location? RailLocation
---Location of the alternative outgoing signal, which goes to the right relative to the rail end movement. Not all places have alternative outgoing signal spot, so when it is not available, a nil will be given instead
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRailEnd.html#alternative_out_signal_location)
---@field alternative_out_signal_location? RailLocation
---Which end of the rail this RailEnd is binding to.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRailEnd.html#direction)
---@field direction defines.rail_direction
---Location of an incoming signal, which goes to the left relative to the rail end movement.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRailEnd.html#in_signal_location)
---@field in_signal_location RailLocation
---Location of the rail end
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRailEnd.html#location)
---@field location RailLocation
---The class name of this object. Available even when `valid` is false. For LuaStruct objects it may also be suffixed with a dotted path to a member of the struct.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRailEnd.html#object_name)
---@field object_name string
---Location of an outgoing signal, which goes to the right relative to the rail end movement.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRailEnd.html#out_signal_location)
---@field out_signal_location RailLocation
---Rail to which this RailEnd is binding to.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRailEnd.html#rail)
---@field rail LuaEntity
---Is this object valid? This Lua object holds a reference to an object within the game engine. It is possible that the game-engine object is removed whilst a mod still holds the corresponding Lua object. If that happens, the object becomes invalid, i.e. this attribute will be `false`. Mods are advised to check for object validity if any change to the game state might have occurred between the creation of the Lua object and its access.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRailEnd.html#valid)
---@field valid boolean
local LuaRailEnd={
---Moves to opposite end on the rail this object points to
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRailEnd.html#flip_direction)
flip_direction = function() end;
---Returns all possible rail extensions from this position as defined by the planner item.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRailEnd.html#get_rail_extensions)
---@param planner_item ItemID Rail planner that defines possible rail extensions
---@return (RailExtensionData)[] 
get_rail_extensions = function(planner_item) end;
---Creates a copy of this LuaRailEnd object.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRailEnd.html#make_copy)
---@return LuaRailEnd 
make_copy = function() end;
---Moves forward by 1 rail to the specified connection direction
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRailEnd.html#move_forward)
---@param connection_direction defines.rail_connection_direction 
---@return boolean  #If the move was successful. False if there is no rail connected in given connection\_direction
move_forward = function(connection_direction) end;
---Moves forward by 1 rail in the natural direction. Natural direction is a move in the direction taken by the train over rail connection related to this rail end. If there are no trains, the natural direction is straight if straight connected rail exists, otherwise it is right if right connected rail exists, otherwise it is left if left connected rail exists. Natural direction is not defined if there are no rails connected to this end and this method will fail.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRailEnd.html#move_natural)
---@return boolean  #If the move was successful. False only when there are no rails connected on this end
move_natural = function() end;
---Moves forward until a rail segment boundary is reached. If this rail end is at the segment boundary, it will not move at all. When a rail segment is cyclical, it will reach the rail segment boundary at some arbitrary position unless the segment boundary is well defined by presence of rail signals, train stop or other rails connecting to the rails loop.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRailEnd.html#move_to_segment_end)
move_to_segment_end = function() end;
}
end

