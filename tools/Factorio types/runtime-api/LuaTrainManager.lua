---@meta _

--$Factorio 2.0.9
--$Generator 1.1.47
--$Section runtime-api/LuaTrainManager
-- This file is automatically generated. Edits will be overwritten without warning.

do
---@class LuaTrainManager.request_train_path_param
---Request type. Determines the return type of the method. Defaults to `"path"`.
---@field type? TrainPathRequestType
---Mandatory if `starts` is not provided, optional otherwise. Selects a context for the pathfinder to decide which train to exclude from penalties and which signals are considered possible to reacquire. If `starts` is not provided, then it is also used to collect front and back ends for the search
---@field train? LuaTrain
---@field goals (TrainPathFinderGoal)[]
---Only relevant if request type is `"path"`. Returning a full path is expensive due to multiple LuaEntity created. In order for path to be returned, true must be provided here. Defaults to false in which case a path will not be provided.
---@field return_path? boolean
---Manually provided starting positions.
---@field starts? (RailEndStart)[]
---Only relevant if `starts` was not provided in which case 2 starts (front and back) are deduced from the train. Selects which train ends should be considered as starts. Defaults to `"any-direction-with-locomotives"`.
---@field search_direction? ("respect-movement-direction")|("any-direction-with-locomotives")
---Defaults to `false`. If set to true, pathfinder will not return a path that cannot have its start immediately reserved. A path that cannot have its start immediately reserved could cause a train to stop inside of an intersection.
---@field in_chain_signal_section? boolean
---Maximum amount of steps pathfinder is allowed to perform.
---@field steps_limit? uint
---Defaults to `false`. If set to true, only length of rails is added to penalties causing search to look for shortest path (not smallest penalty)
---@field shortest_path? boolean
local LuaTrainManager_request_train_path_param={
}
end

do
---The train manager manages all the train in the game. LuaTrainManager allows to perform some direct queries to the train manager.
---
---There is always exactly one train manager instance in a game, it can be obtained from [LuaGameScript::train\_manager](https://lua-api.factorio.com/latest/classes/LuaGameScript.html#train_manager). This object is always valid and is equal to any other instance of LuaTrainManager from this game.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTrainManager.html)
---@class LuaTrainManager:LuaObject
---The class name of this object. Available even when `valid` is false. For LuaStruct objects it may also be suffixed with a dotted path to a member of the struct.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTrainManager.html#object_name)
---@field object_name string
---Is this object valid? This Lua object holds a reference to an object within the game engine. It is possible that the game-engine object is removed whilst a mod still holds the corresponding Lua object. If that happens, the object becomes invalid, i.e. this attribute will be `false`. Mods are advised to check for object validity if any change to the game state might have occurred between the creation of the Lua object and its access.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTrainManager.html#valid)
---@field valid boolean
local LuaTrainManager={
---Searches for a train with given ID.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTrainManager.html#get_train_by_id)
---@param train_id uint Train ID to search
---@return LuaTrain?  #Train if found
get_train_by_id = function(train_id) end;
---Gets all train stops that pass given filter
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTrainManager.html#get_train_stops)
---@param filter TrainStopFilter Filters the train stop must pass in order to be returned here
---@return (LuaEntity)[] 
get_train_stops = function(filter) end;
---Gets all trains that pass given filter
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTrainManager.html#get_trains)
---@param filter TrainFilter Filters the train must pass in order to be returned here
---@return (LuaTrain)[] 
get_trains = function(filter) end;
---Direct access to train pathfinder. Allows to search rail paths or querying which stops are accessible
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTrainManager.html#request_train_path)
---@param param LuaTrainManager.request_train_path_param 
---@return (TrainPathFinderOneGoalResult)|(TrainPathAllGoalsResult)  #The type of the returned value depends on `type`.
request_train_path = function(param) end;
}
end

