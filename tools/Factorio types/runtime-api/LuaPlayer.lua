---@meta _

--$Factorio 2.0.9
--$Generator 1.1.47
--$Section runtime-api/LuaPlayer
-- This file is automatically generated. Edits will be overwritten without warning.

do
---@class LuaPlayer.build_from_cursor_param
---Where the entity would be placed
---@field position MapPosition
---Direction the entity would be placed
---@field direction? defines.direction
---Whether to mirror the entity
---@field mirror? boolean
---Which build mode should be used instead of normal build. Defaults to normal.
---@field build_mode? defines.build_mode
---The size for building terrain if building terrain. Defaults to 2.
---@field terrain_building_size? uint
---If chunks covered by fog-of-war are skipped.
---@field skip_fog_of_war? boolean
local LuaPlayer_build_from_cursor_param={
}
end

do
---@class LuaPlayer.can_build_from_cursor_param
---Where the entity would be placed
---@field position MapPosition
---Direction the entity would be placed
---@field direction? defines.direction
---Which build mode should be used instead of normal build. Defaults to normal.
---@field build_mode? defines.build_mode
---The size for building terrain if building terrain. Defaults to 2.
---@field terrain_building_size? uint
---If chunks covered by fog-of-war are skipped.
---@field skip_fog_of_war? boolean
local LuaPlayer_can_build_from_cursor_param={
}
end

do
---@class LuaPlayer.can_place_entity_param
---Name of the entity to check.
---@field name EntityID
---Where the entity would be placed.
---@field position MapPosition
---Direction the entity would be placed. Defaults to `north`.
---@field direction? defines.direction
local LuaPlayer_can_place_entity_param={
}
end

do
---@class LuaPlayer.connect_to_server_param
---The server (address:port) if port is not given the default Factorio port is used.
---@field address string
---The name of the server.
---@field name? LocalisedString
---@field description? LocalisedString
---The password if different from the one used to join this game. Note, if the current password is not empty but the one required to join the new server is an empty string should be given for this field.
---@field password? string
local LuaPlayer_connect_to_server_param={
}
end

do
---@class LuaPlayer.create_local_flying_text_param
---The flying text to show.
---@field text LocalisedString
---The location on the map at which to show the flying text.
---@field position? MapPosition
---If `true`, the flying text is created at the player's cursor. Defaults to `false`.
---@field create_at_cursor? boolean
---The color of the flying text. Defaults to white text.
---@field color? Color
---The amount of ticks that the flying text will be shown for. Defaults to `80`.
---@field time_to_live? uint
---The speed at which the text rises upwards in tiles/second. Can't be a negative value.
---@field speed? double
local LuaPlayer_create_local_flying_text_param={
}
end

do
---@class LuaPlayer.drag_wire_param
---Position at which cursor was clicked. Used only to decide which side of arithmetic combinator, decider combinator or power switch is to be connected. Entity itself to be connected is based on the player's selected entity.
---@field position MapPosition
local LuaPlayer_drag_wire_param={
}
end

do
---@class LuaPlayer.get_alerts_param
---@field entity? LuaEntity
---@field prototype? LuaEntityPrototype
---@field position? MapPosition
---@field type? defines.alert_type
---@field surface? SurfaceIdentification
local LuaPlayer_get_alerts_param={
}
end

do
---@class LuaPlayer.play_sound_param
---The sound to play.
---@field path SoundPath
---Where the sound should be played. If not given, it's played at the current position of the player.
---@field position? MapPosition
---The volume of the sound to play. Must be between 0 and 1 inclusive.
---@field volume_modifier? double
---The volume mixer to play the sound through. Defaults to the default mixer for the given sound type.
---@field override_sound_type? SoundType
local LuaPlayer_play_sound_param={
}
end

do
---@class LuaPlayer.remove_alert_param
---@field entity? LuaEntity
---@field prototype? EntityID
---@field position? MapPosition
---@field type? defines.alert_type
---@field surface? SurfaceIdentification
---@field icon? SignalID
---@field message? LocalisedString
local LuaPlayer_remove_alert_param={
}
end

do
---@class LuaPlayer.set_controller_param
---Which controller to use.
---@field type defines.controllers
---Entity to control. Mandatory when `type` is [defines.controllers.character](https://lua-api.factorio.com/latest/defines.html#defines.controllers.character), ignored otherwise.
---@field character? LuaEntity
---List of waypoints for the cutscene controller. This parameter is mandatory when `type` is [defines.controllers.cutscene](https://lua-api.factorio.com/latest/defines.html#defines.controllers.cutscene).
---@field waypoints? CutsceneWaypoint
---If specified and `type` is [defines.controllers.cutscene](https://lua-api.factorio.com/latest/defines.html#defines.controllers.cutscene), the cutscene will start at this position. If not given the start position will be the player position.
---@field start_position? MapPosition
---If specified and `type` is [defines.controllers.cutscene](https://lua-api.factorio.com/latest/defines.html#defines.controllers.cutscene), the cutscene will start at this zoom level. If not given the start zoom will be the players zoom.
---@field start_zoom? double
---If specified and `type` is [defines.controllers.cutscene](https://lua-api.factorio.com/latest/defines.html#defines.controllers.cutscene), it is the time in ticks it will take for the camera to pan from the final waypoint back to the starting position. If not given the camera will not pan back to the start position/zoom.
---@field final_transition_time? uint
---If specified and `type` is [defines.controllers.cutscene](https://lua-api.factorio.com/latest/defines.html#defines.controllers.cutscene), the game will switch to chart-mode (map zoomed out) rendering when the zoom level is less than this value.
---@field chart_mode_cutoff? double
---If specified and `type` is [defines.controllers.remote](https://lua-api.factorio.com/latest/defines.html#defines.controllers.remote), the position the remote controller will be centered on.
---@field position? MapPosition
---If specified and `type` is [defines.controllers.remote](https://lua-api.factorio.com/latest/defines.html#defines.controllers.remote), the surface the remote controller will be put on.
---@field surface? SurfaceIdentification
local LuaPlayer_set_controller_param={
}
end

do
---A player in the game. Pay attention that a player may or may not have a character, which is the [LuaEntity](https://lua-api.factorio.com/latest/classes/LuaEntity.html) of the little guy running around the world doing things.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html)
---@class LuaPlayer:LuaControl
---`true` if the player is an admin.
---
---Trying to change player admin status from the console when you aren't an admin does nothing.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#admin)
---@field admin boolean
---How many ticks since the last action of this player.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#afk_time)
---@field afk_time uint
---If the main inventory will be auto sorted.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#auto_sort_main_inventory)
---@field auto_sort_main_inventory boolean
---The item stack containing a blueprint to be setup.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#blueprint_to_setup)
---@field blueprint_to_setup LuaItemStack
---Records contained in the player's blueprint library.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#blueprints)
---@field blueprints (LuaRecord)[]
---The entity being centered on in remote view.
---
---When writing, the player will be switched to remote view (if not already in it) and centered on the given entity.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#centered_on)
---@field centered_on? LuaEntity
---The character attached to this player, if any. Returns `nil` when the player is disconnected (see [LuaPlayer::connected](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#connected)).
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#character)
---@field character? LuaEntity
---The color used when this player talks in game.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#chat_color)
---@field chat_color Color
---The color associated with the player. This will be used to tint the player's character as well as their buildings and vehicles.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#color)
---@field color Color
---`true` if the player is currently connected to the game.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#connected)
---@field connected boolean
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#controller_type)
---@field controller_type defines.controllers
---Returns true if the current item stack in cursor will be destroyed after clearing the cursor. Manually putting it into inventory still preserves the item. If the cursor stack is not one of the supported types (blueprint, blueprint-book, deconstruction-planner, upgrade-planner), write operation will be silently ignored.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#cursor_stack_temporary)
---@field cursor_stack_temporary boolean
---When in a cutscene; the character this player would be using once the cutscene is over, if any. Returns `nil` when the player is disconnected (see [LuaPlayer::connected](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#connected)).
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#cutscene_character)
---@field cutscene_character? LuaEntity
---The display density scale for this player. The display density scale is the factor of [LuaPlayer::display\_scale](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#display_scale) that is determined by the physical DPI of the screen that Factorio is running on. In most cases, the default value is 1. If the player is playing on a high-density display, this value may be 2 or greater.
---
---During [on\_player\_created](https://lua-api.factorio.com/latest/events.html#on_player_created), this attribute will always return a scale of `1`. To get the actual scale, listen to the [on\_player\_display\_density\_scale\_changed](https://lua-api.factorio.com/latest/events.html#on_player_display_density_scale_changed) event raised shortly afterwards.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#display_density_scale)
---@field display_density_scale double
---The display resolution for this player.
---
---During [on\_player\_created](https://lua-api.factorio.com/latest/events.html#on_player_created), this attribute will always return a resolution of `{width=1920, height=1080}`. To get the actual resolution, listen to the [on\_player\_display\_resolution\_changed](https://lua-api.factorio.com/latest/events.html#on_player_display_resolution_changed) event raised shortly afterwards.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#display_resolution)
---@field display_resolution DisplayResolution
---The display scale for this player.
---
---During [on\_player\_created](https://lua-api.factorio.com/latest/events.html#on_player_created), this attribute will always return a scale of `1`. To get the actual scale, listen to the [on\_player\_display\_scale\_changed](https://lua-api.factorio.com/latest/events.html#on_player_display_scale_changed) event raised shortly afterwards.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#display_scale)
---@field display_scale double
---The wire drag target for this player, if any.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#drag_target)
---@field drag_target? DragTarget
---The source entity used during entity settings copy-paste, if any.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#entity_copy_source)
---@field entity_copy_source? LuaEntity
---The player's game view settings.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#game_view_settings)
---@field game_view_settings GameViewSettings
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#gui)
---@field gui LuaGui
---The original location of the item in the cursor, marked with a hand. `nil` if the cursor stack is empty. When writing, the specified inventory slot must be empty and the cursor stack must not be empty.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#hand_location)
---@field hand_location? ItemStackLocation
---This player's index in [LuaGameScript::players](https://lua-api.factorio.com/latest/classes/LuaGameScript.html#players) (unique ID). It is assigned when a player is created, and remains so (even when the player is not [connected](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#connected)) until the player is irreversibly [removed](https://lua-api.factorio.com/latest/events.html#on_player_removed). Indexes of removed players can be reused.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#index)
---@field index uint
---The filters for this map editor infinity inventory settings.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#infinity_inventory_filters)
---@field infinity_inventory_filters (InfinityInventoryFilter)[]
---The input method of the player, mouse and keyboard or game controller
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#input_method)
---@field input_method defines.input_method
---At what tick this player was last online.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#last_online)
---@field last_online uint
---The active locale for this player.
---
---During [on\_player\_created](https://lua-api.factorio.com/latest/events.html#on_player_created), this attribute will be `en`. To get the actual value, listen to the [on\_player\_locale\_changed](https://lua-api.factorio.com/latest/events.html#on_player_locale_changed) event raised shortly afterwards.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#locale)
---@field locale string
---The player's map view settings. To write to this, use a table containing the fields that should be changed.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#map_view_settings)
---@field map_view_settings MapViewSettings
---`true` if the minimap is visible.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#minimap_enabled)
---@field minimap_enabled boolean
---The current per-player settings for the this player, indexed by prototype name. Returns the same structure as [LuaSettings::get\_player\_settings](https://lua-api.factorio.com/latest/classes/LuaSettings.html#get_player_settings). This table becomes invalid if its associated player does.
---
---Even though this attribute is marked as read-only, individual settings can be changed by overwriting their [ModSetting](https://lua-api.factorio.com/latest/concepts.html#ModSetting) table. Mods can only change their own settings. Using the in-game console, all player settings can be changed.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#mod_settings)
---
---### Example
---
---```
----- Change the value of the "active_lifestyle" setting
---player.mod_settings["active_lifestyle"] = {value = true}
---```
---@field mod_settings LuaCustomTable<string, ModSetting>
---The player's username.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#name)
---@field name string
---The class name of this object. Available even when `valid` is false. For LuaStruct objects it may also be suffixed with a dotted path to a member of the struct.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#object_name)
---@field object_name string
---How many ticks did this player spend playing this save (all sessions combined).
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#online_time)
---@field online_time uint
---`true` if the player opened itself. I.e. if they opened the character or god-controller GUI.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#opened_self)
---@field opened_self boolean
---The permission group this player is part of, if any.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#permission_group)
---@field permission_group? LuaPermissionGroup
---The current position of this players physical controller.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#physical_position)
---@field physical_position MapPosition
---The surface this players physical controller is on.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#physical_surface)
---@field physical_surface LuaSurface
---Unique ID associated with the surface this players physical controller is currently on.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#physical_surface_index)
---@field physical_surface_index uint
---The current vehicle of this players physical controller.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#physical_vehicle)
---@field physical_vehicle MapPosition
---If items not included in this map editor infinity inventory filters should be removed.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#remove_unfiltered_items)
---@field remove_unfiltered_items boolean
---The render mode of the player, like map or zoom to world. The render mode can be set using [LuaPlayer::open\_map](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#open_map), [LuaPlayer::zoom\_to\_world](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#zoom_to_world) and [LuaPlayer::close\_map](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#close_map).
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#render_mode)
---@field render_mode defines.render_mode
---If `true`, circle and name of given player is rendered on the map/chart.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#show_on_map)
---@field show_on_map boolean
---If `true`, zoom-to-world noise effect will be disabled and environmental sounds will be based on zoom-to-world view instead of position of player's character.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#spectator)
---@field spectator boolean
---All SpiderVehicles currently selected by the player, if they are holding a spidertron remote.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#spidertron_remote_selection)
---@field spidertron_remote_selection? (LuaEntity)[]
---The stashed controller type, if any. This is mainly useful when a player is in the map editor.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#stashed_controller_type)
---@field stashed_controller_type? defines.controllers
---The tag that is shown after the player in chat, on the map and above multiplayer selection rectangles.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#tag)
---@field tag string
---The number of ticks until this player will respawn. `nil` if this player is not waiting to respawn.
---
---Set to `nil` to immediately respawn the player.
---
---Set to any positive value to trigger the respawn state for this player.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#ticks_to_respawn)
---@field ticks_to_respawn? uint
---The undo and redo stack for this player.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#undo_redo_stack)
---@field undo_redo_stack LuaUndoRedoStack
---Is this object valid? This Lua object holds a reference to an object within the game engine. It is possible that the game-engine object is removed whilst a mod still holds the corresponding Lua object. If that happens, the object becomes invalid, i.e. this attribute will be `false`. Mods are advised to check for object validity if any change to the game state might have occurred between the creation of the Lua object and its access.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#valid)
---@field valid boolean
---The player's zoom-level.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#zoom)
---@field zoom double
local LuaPlayer={
---Gets a copy of the currently selected blueprint in the clipboard queue into the player's cursor, as if the player activated Paste.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#activate_paste)
activate_paste = function() end;
---Adds an alert to this player for the given entity of the given alert type.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#add_alert)
---@param entity LuaEntity 
---@param type defines.alert_type 
add_alert = function(entity, type) end;
---Adds a custom alert to this player.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#add_custom_alert)
---@param entity LuaEntity If the alert is clicked, the map will open at the position of this entity.
---@param icon SignalID 
---@param message LocalisedString 
---@param show_on_map boolean 
add_custom_alert = function(entity, icon, message, show_on_map) end;
---Adds the given recipe to the list of recipe notifications for this player.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#add_recipe_notification)
---@param recipe RecipeID Recipe to add.
add_recipe_notification = function(recipe) end;
---Adds the given blueprint to this player's clipboard queue.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#add_to_clipboard)
---@param blueprint LuaItemStack The blueprint to add.
add_to_clipboard = function(blueprint) end;
---Associates a character with this player.
---
---The character must not be connected to any controller.
---
---If this player is currently disconnected (see [LuaPlayer::connected](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#connected)) the character will be immediately "logged off".
---
---See [LuaPlayer::get\_associated\_characters](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#get_associated_characters) for more information.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#associate_character)
---@param character LuaEntity The character entity.
associate_character = function(character) end;
---Builds whatever is in the cursor on the surface the player is on. The cursor stack will automatically be reduced as if the player built normally.
---
---**Events:**
---
---* May raise [on\_built\_entity](https://lua-api.factorio.com/latest/events.html#on_built_entity) instantly.
---  Raised if the cursor was successfully built.
---
---* May raise [on\_pre\_build](https://lua-api.factorio.com/latest/events.html#on_pre_build) instantly.
---  Raised if the cursor was successfully built.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#build_from_cursor)
---@param param LuaPlayer.build_from_cursor_param 
build_from_cursor = function(param) end;
---Checks if this player can build what ever is in the cursor on the surface the player is on.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#can_build_from_cursor)
---@param param LuaPlayer.can_build_from_cursor_param 
---@return boolean 
can_build_from_cursor = function(param) end;
---Checks if this player can build the given entity at the given location on the surface the player is on.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#can_place_entity)
---@param param LuaPlayer.can_place_entity_param 
---@return boolean 
can_place_entity = function(param) end;
---Clear the chat console.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#clear_console)
clear_console = function() end;
---Invokes the "clear cursor" action on the player as if the user pressed it.
---
---**Events:**
---
---* May raise [on\_player\_cursor\_stack\_changed](https://lua-api.factorio.com/latest/events.html#on_player_cursor_stack_changed) later in the current tick.
---  Raised when the cursor was successfully cleared.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#clear_cursor)
---@return boolean  #Whether the cursor is now empty.
clear_cursor = function() end;
---Clears the blinking of the inventory based on insertion of items
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#clear_inventory_highlights)
clear_inventory_highlights = function() end;
---Clear any active flying texts for this player.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#clear_local_flying_texts)
clear_local_flying_texts = function() end;
---Clears all recipe notifications for this player.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#clear_recipe_notifications)
clear_recipe_notifications = function() end;
---Clears the players selection tool selection position.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#clear_selection)
clear_selection = function() end;
---Asks the player if they would like to connect to the given server.
---
---This only does anything when used on a multiplayer peer. Single player and server hosts will ignore the prompt.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#connect_to_server)
---@param param LuaPlayer.connect_to_server_param 
connect_to_server = function(param) end;
---Creates and attaches a character entity to this player.
---
---The player must not have a character already connected and must be online (see [LuaPlayer::connected](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#connected)).
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#create_character)
---@param character? EntityWithQualityID The character to create else the default is used.
---@return boolean  #Whether the character was created.
create_character = function(character) end;
---Spawn flying text that is only visible to this player. Either `position` or `create_at_cursor` are required. When `create_at_cursor` is `true`, all parameters other than `text` are ignored.
---
---If no custom `speed` is set and the text is longer than 25 characters, its `time_to_live` and `speed` are dynamically adjusted to give players more time to read it.
---
---Local flying text is not saved, which means it will disappear after a save/load-cycle.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#create_local_flying_text)
---@param param LuaPlayer.create_local_flying_text_param 
create_local_flying_text = function(param) end;
---Disables alerts for the given alert category.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#disable_alert)
---@param alert_type defines.alert_type 
---@return boolean  #Whether the alert type was disabled (false if it was already disabled).
disable_alert = function(alert_type) end;
---Disable recipe groups.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#disable_recipe_groups)
disable_recipe_groups = function() end;
---Disable recipe subgroups.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#disable_recipe_subgroups)
disable_recipe_subgroups = function() end;
---Disassociates a character from this player. This is functionally the same as setting [LuaEntity::associated\_player](https://lua-api.factorio.com/latest/classes/LuaEntity.html#associated_player) to `nil`.
---
---See [LuaPlayer::get\_associated\_characters](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#get_associated_characters) for more information.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#disassociate_character)
---@param character LuaEntity The character entity
disassociate_character = function(character) end;
---Start/end wire dragging at the specified location, wire type is based on the cursor contents
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#drag_wire)
---@param param LuaPlayer.drag_wire_param 
---@return boolean  #`true` if the action did something
drag_wire = function(param) end;
---Enables alerts for the given alert category.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#enable_alert)
---@param alert_type defines.alert_type 
---@return boolean  #Whether the alert type was enabled (false if it was already enabled).
enable_alert = function(alert_type) end;
---Enable recipe groups.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#enable_recipe_groups)
enable_recipe_groups = function() end;
---Enable recipe subgroups.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#enable_recipe_subgroups)
enable_recipe_subgroups = function() end;
---Enters the given space platform if possible.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#enter_space_platform)
---@param space_platform SpacePlatformIdentification 
---@return boolean  #If the player entered the platform.
enter_space_platform = function(space_platform) end;
---Exit the current cutscene. Errors if not in a cutscene.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#exit_cutscene)
exit_cutscene = function() end;
---Gets which quick bar page is being used for the given screen page or `nil` if not known.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#get_active_quick_bar_page)
---@param index uint The screen page. Index 1 is the top row in the gui. Index can go beyond the visible number of bars on the screen to account for the interface config setting change.
---@return uint8? 
get_active_quick_bar_page = function(index) end;
---Get all alerts matching the given filters, or all alerts if no filters are given.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#get_alerts)
---@param param LuaPlayer.get_alerts_param 
---@return {[uint]:{[defines.alert_type]:(Alert)[]}}  #A mapping of surface index to an array of arrays of [alerts](https://lua-api.factorio.com/latest/concepts.html#Alert) indexed by the [alert type](https://lua-api.factorio.com/latest/defines.html#defines.alert_type).
get_alerts = function(param) end;
---The characters associated with this player.
---
---The array will always be empty when the player is disconnected (see [LuaPlayer::connected](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#connected)) regardless of there being associated characters.
---
---Characters associated with this player will be logged off when this player disconnects but are not controlled by any player.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#get_associated_characters)
---@return (LuaEntity)[] 
get_associated_characters = function() end;
---Get the current goal description, as a localised string.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#get_goal_description)
---@return LocalisedString 
get_goal_description = function() end;
---Gets the filter for this map editor infinity filters at the given index or `nil` if the filter index doesn't exist or is empty.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#get_infinity_inventory_filter)
---@param index uint The index to get.
---@return InfinityInventoryFilter? 
get_infinity_inventory_filter = function(index) end;
---Gets the quick bar filter for the given slot or `nil`.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#get_quick_bar_slot)
---@param index uint The slot index. 1 for the first slot of page one, 2 for slot two of page one, 11 for the first slot of page 2, etc.
---@return LuaItemPrototype? 
get_quick_bar_slot = function(index) end;
---If the given alert type is currently enabled.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#is_alert_enabled)
---@param alert_type defines.alert_type 
---@return boolean 
is_alert_enabled = function(alert_type) end;
---If the given alert type is currently muted.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#is_alert_muted)
---@param alert_type defines.alert_type 
---@return boolean 
is_alert_muted = function(alert_type) end;
---Is a custom Lua shortcut currently available?
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#is_shortcut_available)
---@param prototype_name string Prototype name of the custom shortcut.
---@return boolean 
is_shortcut_available = function(prototype_name) end;
---Is a custom Lua shortcut currently toggled?
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#is_shortcut_toggled)
---@param prototype_name string Prototype name of the custom shortcut.
---@return boolean 
is_shortcut_toggled = function(prototype_name) end;
---Jump to the specified cutscene waypoint. Only works when the player is viewing a cutscene.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#jump_to_cutscene_waypoint)
---@param waypoint_index uint 
jump_to_cutscene_waypoint = function(waypoint_index) end;
---Ejects this player from the current space platform and lands on the current planet.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#land_on_planet)
---@return boolean  #If the player successfully landed on the planet.
land_on_planet = function() end;
---Ejects this player from the current space platform if in a platform. The player is left on the platform at the position of the hub.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#leave_space_platform)
leave_space_platform = function() end;
---Mutes alerts for the given alert category.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#mute_alert)
---@param alert_type defines.alert_type 
---@return boolean  #Whether the alert type was muted (false if it was already muted).
mute_alert = function(alert_type) end;
---Invokes the "smart pipette" action on the player as if the user pressed it.
---
---**Events:**
---
---* May raise [on\_player\_pipette](https://lua-api.factorio.com/latest/events.html#on_player_pipette) instantly.
---  Raised if the entity was successfully pipetted.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#pipette_entity)
---@param entity EntityWithQualityID 
---@param allow_ghost? boolean Defaults to false.
---@return boolean  #Whether the smart pipette found something to place.
pipette_entity = function(entity, allow_ghost) end;
---Play a sound for this player.
---
---The sound is not played if its location is not [charted](https://lua-api.factorio.com/latest/classes/LuaForce.html#chart) for this player.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#play_sound)
---@param param LuaPlayer.play_sound_param 
play_sound = function(param) end;
---Print text to the chat console.
---
---By default, messages that are identical to a message sent in the last 60 ticks are not printed again.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#print)
---@param message LocalisedString 
---@param print_settings? PrintSettings 
print = function(message, print_settings) end;
---Print entity statistics to the player's console.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#print_entity_statistics)
---@param entities? (EntityWithQualityID)[] Entity prototypes to get statistics for. If not specified or empty, display statistics for all entities.
print_entity_statistics = function(entities) end;
---Print LuaObject counts per mod.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#print_lua_object_statistics)
print_lua_object_statistics = function() end;
---Print construction robot job counts to the players console.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#print_robot_jobs)
print_robot_jobs = function() end;
---Removes all alerts matching the given filters or if an empty filters table is given all alerts are removed.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#remove_alert)
---@param param LuaPlayer.remove_alert_param 
remove_alert = function(param) end;
---Requests a translation for the given localised string. If the request is successful, the [on\_string\_translated](https://lua-api.factorio.com/latest/events.html#on_string_translated) event will be fired with the results.
---
---Does nothing if this player is not connected (see [LuaPlayer::connected](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#connected)).
---
---**Events:**
---
---* May raise [on\_string\_translated](https://lua-api.factorio.com/latest/events.html#on_string_translated) in a future tick.
---  Raised if the request was successfully sent.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#request_translation)
---@param localised_string LocalisedString 
---@return uint?  #The unique ID for the requested translation.
request_translation = function(localised_string) end;
---Requests translation for the given set of localised strings. If the request is successful, a [on\_string\_translated](https://lua-api.factorio.com/latest/events.html#on_string_translated) event will be fired for each string with the results.
---
---Does nothing if this player is not connected (see [LuaPlayer::connected](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#connected)).
---
---**Events:**
---
---* May raise [on\_string\_translated](https://lua-api.factorio.com/latest/events.html#on_string_translated) in a future tick.
---  Raised if the request was successfully sent.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#request_translations)
---@param localised_strings (LocalisedString)[] 
---@return (uint)[]?  #The unique IDs for the requested translations.
request_translations = function(localised_strings) end;
---Sets which quick bar page is being used for the given screen page.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#set_active_quick_bar_page)
---@param screen_index uint The screen page. Index 1 is the top row in the gui. Index can go beyond the visible number of bars on the screen to account for the interface config setting change.
---@param page_index uint The new quick bar page.
set_active_quick_bar_page = function(screen_index, page_index) end;
---Set the controller type of the player.
---
---Setting a player to [defines.controllers.editor](https://lua-api.factorio.com/latest/defines.html#defines.controllers.editor) auto promotes the player to admin and enables cheat mode. Setting a player to [defines.controllers.editor](https://lua-api.factorio.com/latest/defines.html#defines.controllers.editor) also requires the calling player be an admin.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#set_controller)
---@param param LuaPlayer.set_controller_param 
set_controller = function(param) end;
---Setup the screen to be shown when the game is finished.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#set_ending_screen_data)
---@param message LocalisedString Message to be shown.
---@param file? string Path to image to be shown.
set_ending_screen_data = function(message, file) end;
---Set the text in the goal window (top left).
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#set_goal_description)
---@param text? LocalisedString The text to display. Lines can be delimited with `\n`. Passing an empty string or omitting this parameter entirely will make the goal window disappear.
---@param only_update? boolean When `true`, won't play the "goal updated" sound.
set_goal_description = function(text, only_update) end;
---Sets the filter for this map editor infinity filters at the given index.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#set_infinity_inventory_filter)
---@param index uint The index to set.
---@param filter (InfinityInventoryFilter)|(nil) The new filter or `nil` to clear the filter.
set_infinity_inventory_filter = function(index, filter) end;
---Sets the quick bar filter for the given slot. If a [LuaItemStack](https://lua-api.factorio.com/latest/classes/LuaItemStack.html) is provided, the slot will be set to that particular item instance if it has extra data, for example a specific blueprint or spidertron remote. Otherwise, it will be set to all items of that prototype, for example iron plates.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#set_quick_bar_slot)
---@param index uint The slot index. 1 for the first slot of page one, 2 for slot two of page one, 11 for the first slot of page 2, etc.
---@param filter (LuaItemStack)|(ItemWithQualityID)|(nil) The filter or `nil` to clear it.
set_quick_bar_slot = function(index, filter) end;
---Make a custom Lua shortcut available or unavailable.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#set_shortcut_available)
---@param prototype_name string Prototype name of the custom shortcut.
---@param available boolean 
set_shortcut_available = function(prototype_name, available) end;
---Toggle or untoggle a custom Lua shortcut
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#set_shortcut_toggled)
---@param prototype_name string Prototype name of the custom shortcut.
---@param toggled boolean 
set_shortcut_toggled = function(prototype_name, toggled) end;
---Starts selection with selection tool from the specified position. Does nothing if the players cursor is not a selection tool.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#start_selection)
---@param position MapPosition The position to start selection from.
---@param selection_mode defines.selection_mode The type of selection to start.
start_selection = function(position, selection_mode) end;
---Toggles this player into or out of the map editor. Does nothing if this player isn't an admin or if the player doesn't have permission to use the map editor.
---
---**Events:**
---
---* May raise [on\_player\_toggled\_map\_editor](https://lua-api.factorio.com/latest/events.html#on_player_toggled_map_editor) instantly.
---  Raised if the map editor was successfully toggled.
---
---* May raise [on\_pre\_player\_toggled\_map\_editor](https://lua-api.factorio.com/latest/events.html#on_pre_player_toggled_map_editor) instantly.
---  Raised if the map editor was successfully toggled.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#toggle_map_editor)
toggle_map_editor = function() end;
---Unlock the achievements of the given player. This has any effect only when this is the local player, the achievement isn't unlocked so far and the achievement is of the type "achievement".
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#unlock_achievement)
---@param name string name of the achievement to unlock
unlock_achievement = function(name) end;
---Unmutes alerts for the given alert category.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#unmute_alert)
---@param alert_type defines.alert_type 
---@return boolean  #Whether the alert type was unmuted (false if it was wasn't muted).
unmute_alert = function(alert_type) end;
---Uses the current item in the cursor if it's a capsule or does nothing if not.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaPlayer.html#use_from_cursor)
---@param position MapPosition Where the item would be used.
use_from_cursor = function(position) end;
}
end

