---@meta _

--$Factorio 2.0.9
--$Generator 1.1.47
--$Section runtime-api/LuaWireConnector
-- This file is automatically generated. Edits will be overwritten without warning.

do
---A wire connector of a given entity. Allows to find wires, add or remove wires and do some basic operations specific to those connectors.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaWireConnector.html)
---@class LuaWireConnector:LuaObject
---Amount of wires going out of this connector. It includes all wires (ghost wires and real wires).
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaWireConnector.html#connection_count)
---@field connection_count uint
---All wire connectors this connector is connected to.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaWireConnector.html#connections)
---@field connections (WireConnection)[]
---If this connector is owned by an entity inside of a ghost. If any of 2 ends of a wire attaches to a ghost connector, then a wire is considered to be a ghost.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaWireConnector.html#is_ghost)
---@field is_ghost boolean
---Index of a CircuitNetwork or ElectricSubNetwork which is going through this wire connector. Returns 0 if there is no network associated with this wire connector right now. CircuitNetwork indexes are independent of indexes of ElectricSubNetwork so they may collide with each other
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaWireConnector.html#network_id)
---@field network_id uint
---The class name of this object. Available even when `valid` is false. For LuaStruct objects it may also be suffixed with a dotted path to a member of the struct.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaWireConnector.html#object_name)
---@field object_name string
---The entity this wire connector belongs to. May return entity ghost instead if this wire connector belongs to inner entity.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaWireConnector.html#owner)
---@field owner LuaEntity
---Amount of real wires going out of this connector. It only includes wires for which both wire connectors are real.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaWireConnector.html#real_connection_count)
---@field real_connection_count uint
---All wire connectors this connector is connected to with real wires.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaWireConnector.html#real_connections)
---@field real_connections (WireConnection)[]
---Is this object valid? This Lua object holds a reference to an object within the game engine. It is possible that the game-engine object is removed whilst a mod still holds the corresponding Lua object. If that happens, the object becomes invalid, i.e. this attribute will be `false`. Mods are advised to check for object validity if any change to the game state might have occurred between the creation of the Lua object and its access.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaWireConnector.html#valid)
---@field valid boolean
---Identifier of this connector in the entity this connector belongs to.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaWireConnector.html#wire_connector_id)
---@field wire_connector_id defines.wire_connector_id
---The type of wires that can be connected to this connector.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaWireConnector.html#wire_type)
---@field wire_type defines.wire_type
local LuaWireConnector={
---Checks if a wire can reach from this connector to the other connector.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaWireConnector.html#can_wire_reach)
---@param other_connector (LuaWireConnector)|(LuaEntity) Target to which a wire reach is to be checked.
---@return boolean 
can_wire_reach = function(other_connector) end;
---Connects this connector to other wire connector.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaWireConnector.html#connect_to)
---@param target LuaWireConnector Other connector to which a wire should be added.
---@param reach_check? boolean True by default. For wires out of reach or on different surfaces, `false` must be provided.
---@param origin? defines.wire_origin Origin of the wire. Defaults to `defines.wire_origin.player`.
---@return boolean  #Whether a connection was made.
connect_to = function(target, reach_check, origin) end;
---Removes all wires going out of this wire connector.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaWireConnector.html#disconnect_all)
---@param origin? defines.wire_origin Origin of the wires to remove. Defaults to `defines.wire_origin.player`.
---@return boolean  #True if any wire was removed.
disconnect_all = function(origin) end;
---Disconnects this connector from other wire connector.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaWireConnector.html#disconnect_from)
---@param target LuaWireConnector Other connector to which wire to be removed should be removed.
---@param origin? defines.wire_origin Origin of the wire. Defaults to `defines.wire_origin.player`.
---@return boolean  #Whether a connection was removed.
disconnect_from = function(target, origin) end;
---Checks if this and other wire connector have a common neighbour.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaWireConnector.html#have_common_neighbour)
---@param other_connector LuaWireConnector Other connector to check for common neighbour.
---@param ignore_ghost_neighbours? boolean 
---@return boolean 
have_common_neighbour = function(other_connector, ignore_ghost_neighbours) end;
---Checks if this connector has any wire going to the other connector.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaWireConnector.html#is_connected_to)
---@param target LuaWireConnector Other connector to check for a connection to.
---@param origin? defines.wire_origin Origin of the wire. Defaults to `defines.wire_origin.player`.
---@return boolean 
is_connected_to = function(target, origin) end;
}
end

