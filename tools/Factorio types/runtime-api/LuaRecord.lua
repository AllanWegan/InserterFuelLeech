---@meta _

--$Factorio 2.0.9
--$Generator 1.1.47
--$Section runtime-api/LuaRecord
-- This file is automatically generated. Edits will be overwritten without warning.

do
---@class LuaRecord.build_blueprint_param
---Surface to build on
---@field surface SurfaceIdentification
---Force to use for the building
---@field force ForceID
---The position to build at
---@field position MapPosition
---The direction to use when building
---@field direction? defines.direction
---If `normal`, blueprint will not be built if any one thing can't be built. If `forced`, anything that can be built is built and obstructing nature entities will be deconstructed. If `superforced`, all obstructions will be deconstructed and the blueprint will be built.
---@field build_mode? defines.build_mode
---If chunks covered by fog-of-war are skipped.
---@field skip_fog_of_war? boolean
---The player to use if any. If provided [defines.events.on\_built\_entity](https://lua-api.factorio.com/latest/defines.html#defines.events.on_built_entity) will also be fired on successful entity creation.
---@field by_player? PlayerIdentification
---If true; [defines.events.script\_raised\_built](https://lua-api.factorio.com/latest/defines.html#defines.events.script_raised_built) will be fired on successful entity creation. Note: this is ignored if by\_player is provided.
---@field raise_built? boolean
local LuaRecord_build_blueprint_param={
}
end

do
---@class LuaRecord.cancel_deconstruct_area_param
---Surface to cancel deconstruct on
---@field surface SurfaceIdentification
---Force to use for canceling deconstruction
---@field force ForceID
---The area to deconstruct
---@field area BoundingBox
---If chunks covered by fog-of-war are skipped. Defaults to `false`.
---@field skip_fog_of_war? boolean
---The player to use if any.
---@field by_player? PlayerIdentification
---If the cancel deconstruction is super-forced. Defaults to `false`.
---@field super_forced? boolean
local LuaRecord_cancel_deconstruct_area_param={
}
end

do
---@class LuaRecord.create_blueprint_param
---Surface to create from
---@field surface SurfaceIdentification
---Force to use for the creation
---@field force ForceID
---The bounding box
---@field area BoundingBox
---When true, blueprintable tiles are always included in the blueprint. When false they're only included if no entities exist in the setup area.
---@field always_include_tiles? boolean
---When true, entities are included in the blueprint. Defaults to true.
---@field include_entities? boolean
---When true, modules are included in the blueprint. Defaults to true.
---@field include_modules? boolean
---When true, station names are included in the blueprint. Defaults to false.
---@field include_station_names? boolean
---When true, trains are included in the blueprint. Defaults to false.
---@field include_trains? boolean
---When true, train fuel is included in the blueprint, Defaults to true.
---@field include_fuel? boolean
local LuaRecord_create_blueprint_param={
}
end

do
---@class LuaRecord.deconstruct_area_param
---Surface to deconstruct on
---@field surface SurfaceIdentification
---Force to use for the deconstruction
---@field force ForceID
---The area to deconstruct
---@field area BoundingBox
---If chunks covered by fog-of-war are skipped. Defaults to `false`.
---@field skip_fog_of_war? boolean
---The player to use if any.
---@field by_player? PlayerIdentification
---If the deconstruction is super-forced. Defaults to `false`.
---@field super_forced? boolean
local LuaRecord_deconstruct_area_param={
}
end

do
---A reference to a record in the blueprint library. Records in the "my blueprints" shelf are read-only, but records in the "game blueprints" shelf are read/write.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html)
---@class LuaRecord:LuaObject
---If absolute snapping is enabled on this blueprint.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#blueprint_absolute_snapping)
---
---*Can only be used if this is BlueprintRecord*
---@field blueprint_absolute_snapping boolean
---The offset from the absolute grid. `nil` if absolute snapping is not enabled.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#blueprint_position_relative_to_grid)
---
---*Can only be used if this is BlueprintRecord*
---@field blueprint_position_relative_to_grid? TilePosition
---The snapping grid size in this blueprint. `nil` if snapping is not enabled.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#blueprint_snap_to_grid)
---
---*Can only be used if this is BlueprintRecord*
---@field blueprint_snap_to_grid? TilePosition
---The contents of this BlueprintBookRecord.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#contents)
---
---*Can only be used if this is BlueprintBookRecord*
---@field contents (LuaRecord)[]
---List of raw materials required to build this blueprint.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#cost_to_build)
---
---*Can only be used if this is BlueprintRecord*
---@field cost_to_build (ItemCountWithQuality)[]
---The default icons for a blueprint blueprint.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#default_icons)
---
---*Can only be used if this is BlueprintRecord*
---@field default_icons (BlueprintSignalIcon)[]
---The number of entity filters this deconstruction planner supports.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#entity_filter_count)
---
---*Can only be used if this is DeconstructionRecord*
---@field entity_filter_count uint
---The blacklist/whitelist entity filter mode for this deconstruction planner,.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#entity_filter_mode)
---
---*Can only be used if this is DeconstructionRecord*
---@field entity_filter_mode defines.deconstruction_item.entity_filter_mode
---The entity filters for this deconstruction planner. The attribute is a sparse array with the keys representing the index of the filter. All strings in this array must be entity prototype names that don't have the `"not-deconstructable"` flag set and are either a `cliff` or marked as `minable`.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#entity_filters)
---
---*Can only be used if this is DeconstructionRecord*
---@field entity_filters (string)[]
---Is this blueprint record a preview? A preview record must be synced by the player before entity and tile data can be read.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#is_blueprint_preview)
---
---*Can only be used if this is BlueprintRecord*
---@field is_blueprint_preview boolean
---The current count of mappers in the upgrade item.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#mapper_count)
---
---*Can only be used if this is UpgradeRecord*
---@field mapper_count uint
---The class name of this object. Available even when `valid` is false. For LuaStruct objects it may also be suffixed with a dotted path to a member of the struct.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#object_name)
---@field object_name string
---The number of tile filters this deconstruction planner supports.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#tile_filter_count)
---
---*Can only be used if this is DeconstructionRecord*
---@field tile_filter_count uint
---The blacklist/whitelist tile filter mode for this deconstruction planner,.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#tile_filter_mode)
---
---*Can only be used if this is DeconstructionRecord*
---@field tile_filter_mode defines.deconstruction_item.tile_filter_mode
---The tile filters for this deconstruction planner,. The attribute is a sparse array with the keys representing the index of the filter. Reading filters always returns an array of strings which are the tile prototype names.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#tile_filters)
---
---*Can only be used if this is DeconstructionRecord*
---@field tile_filters (TileID)[]
---The tile selection mode for this deconstruction planner,.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#tile_selection_mode)
---
---*Can only be used if this is DeconstructionRecord*
---@field tile_selection_mode defines.deconstruction_item.tile_selection_mode
---If this deconstruction planner, is set to allow trees and rocks only.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#trees_and_rocks_only)
---
---*Can only be used if this is DeconstructionRecord*
---@field trees_and_rocks_only boolean
---The type of this blueprint record.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#type)
---@field type ("blueprint")|("blueprint-book")|("deconstruction-planner")|("upgrade-planner")
---Is this object valid? This Lua object holds a reference to an object within the game engine. It is possible that the game-engine object is removed whilst a mod still holds the corresponding Lua object. If that happens, the object becomes invalid, i.e. this attribute will be `false`. Mods are advised to check for object validity if any change to the game state might have occurred between the creation of the Lua object and its access.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#valid)
---@field valid boolean
---Is this record valid for writing? A record is invalid for write if it is a BlueprintRecord preview or if it is in the "My blueprints" shelf.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#valid_for_write)
---@field valid_for_write boolean
local LuaRecord={
---Build this blueprint at the given location.
---
---Built entities can be come invalid between the building of the blueprint and the function returning if by\_player or raise\_built is used and one of those events invalidates the entity.
---
---*Can only be used if this is BlueprintRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#build_blueprint)
---@param param LuaRecord.build_blueprint_param 
---@return (LuaEntity)[]  #Array of created ghosts
build_blueprint = function(param) end;
---Cancel deconstruct the given area with this deconstruction planner,.
---
---*Can only be used if this is DeconstructionRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#cancel_deconstruct_area)
---@param param LuaRecord.cancel_deconstruct_area_param 
cancel_deconstruct_area = function(param) end;
---Clears this blueprint.
---
---*Can only be used if this is BlueprintRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#clear_blueprint)
clear_blueprint = function() end;
---Clears all settings/filters on this deconstruction planner, resetting it to default values.
---
---*Can only be used if this is DeconstructionRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#clear_deconstruction_data)
clear_deconstruction_data = function() end;
---Clears all settings/filters on this upgrade planner, resetting it to default values.
---
---*Can only be used if this is UpgradeRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#clear_upgrade_data)
clear_upgrade_data = function() end;
---Sets up this blueprint using the found blueprintable entities/tiles on the surface.
---
---*Can only be used if this is BlueprintRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#create_blueprint)
---@param param LuaRecord.create_blueprint_param 
---@return {[uint]:LuaEntity}  #The blueprint entity index to source entity mapping.
create_blueprint = function(param) end;
---Deconstruct the given area with this deconstruction planner,.
---
---*Can only be used if this is DeconstructionRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#deconstruct_area)
---@param param LuaRecord.deconstruct_area_param 
deconstruct_area = function(param) end;
---The entities in this blueprint.
---
---*Can only be used if this is BlueprintRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#get_blueprint_entities)
---@return (BlueprintEntity)[]? 
get_blueprint_entities = function() end;
---Gets the number of entities in this blueprint blueprint.
---
---*Can only be used if this is BlueprintRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#get_blueprint_entity_count)
---@return uint 
get_blueprint_entity_count = function() end;
---Gets the given tag on the given blueprint entity index in this blueprint blueprint.
---
---*Can only be used if this is BlueprintRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#get_blueprint_entity_tag)
---@param index uint The entity index.
---@param tag string The tag to get.
---@return AnyBasic? 
get_blueprint_entity_tag = function(index, tag) end;
---Gets the tags for the given blueprint entity index in this blueprint.
---
---*Can only be used if this is BlueprintRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#get_blueprint_entity_tags)
---@param index uint 
---@return Tags 
get_blueprint_entity_tags = function(index) end;
---A list of the tiles in this blueprint.
---
---*Can only be used if this is BlueprintRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#get_blueprint_tiles)
---@return (Tile)[]? 
get_blueprint_tiles = function() end;
---Gets the entity filter at the given index for this deconstruction planner,.
---
---*Can only be used if this is DeconstructionRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#get_entity_filter)
---@param index uint 
---@return string? 
get_entity_filter = function(index) end;
---Gets the filter at the given index for this upgrade item.
---
---In contrast to [LuaRecord::set\_mapper](https://lua-api.factorio.com/latest/classes/LuaRecord.html#set_mapper), indices past the upgrade item's current size are considered to be out of bounds.
---
---*Can only be used if this is UpgradeRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#get_mapper)
---@param index uint The index of the mapper to read.
---@param type string `"from"` or `"to"`.
---@return (UpgradeMapperSource)|(UpgradeMapperDestination) 
get_mapper = function(index, type) end;
---Gets the tile filter at the given index for this deconstruction planner,.
---
---*Can only be used if this is DeconstructionRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#get_tile_filter)
---@param index uint 
---@return string? 
get_tile_filter = function(index) end;
---Is this blueprint setup? I.e. is it a non-empty blueprint?
---
---*Can only be used if this is BlueprintRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#is_blueprint_setup)
---@return boolean 
is_blueprint_setup = function() end;
---Set new entities to be a part of this blueprint.
---
---*Can only be used if this is BlueprintRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#set_blueprint_entities)
---@param entities (BlueprintEntity)[] The new blueprint entities.
set_blueprint_entities = function(entities) end;
---Sets the given tag on the given blueprint entity index in this blueprint blueprint.
---
---*Can only be used if this is BlueprintRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#set_blueprint_entity_tag)
---@param index uint The entity index.
---@param tag string The tag to set.
---@param value AnyBasic The tag value to set or `nil` to clear the tag.
set_blueprint_entity_tag = function(index, tag, value) end;
---Sets the tags on the given blueprint entity index in this blueprint.
---
---*Can only be used if this is BlueprintRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#set_blueprint_entity_tags)
---@param index uint The entity index
---@param tags Tags 
set_blueprint_entity_tags = function(index, tags) end;
---Set specific tiles in this blueprint.
---
---*Can only be used if this is BlueprintRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#set_blueprint_tiles)
---@param tiles (Tile)[] Tiles to be a part of the blueprint.
set_blueprint_tiles = function(tiles) end;
---Sets the entity filter at the given index for this deconstruction planner,.
---
---*Can only be used if this is DeconstructionRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#set_entity_filter)
---@param index uint 
---@param filter (string)|(LuaEntityPrototype)|(LuaEntity)|(nil) Writing `nil` removes the filter.
---@return boolean  #Whether the new filter was successfully set (ie. was valid).
set_entity_filter = function(index, filter) end;
---Sets the module filter at the given index for this upgrade item.
---
---In contrast to [LuaRecord::get\_mapper](https://lua-api.factorio.com/latest/classes/LuaRecord.html#get_mapper), indices past the upgrade item's current size are valid and expand the list of mappings accordingly, if within reasonable bounds.
---
---*Can only be used if this is UpgradeRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#set_mapper)
---@param index uint The index of the mapper to set.
---@param type string `"from"` or `"to"`.
---@param mapper (UpgradeMapperSource)|(UpgradeMapperDestination) The mapper to set or `nil`
set_mapper = function(index, type, mapper) end;
---Sets the tile filter at the given index for this deconstruction planner,.
---
---*Can only be used if this is DeconstructionRecord*
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaRecord.html#set_tile_filter)
---@param index uint 
---@param filter (string)|(LuaTilePrototype)|(LuaTile) Setting to nil erases the filter.
---@return boolean  #Whether the new filter was successfully set (ie. was valid).
set_tile_filter = function(index, filter) end;
}
end

