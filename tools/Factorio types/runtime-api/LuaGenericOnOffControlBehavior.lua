---@meta _

--$Factorio 2.0.9
--$Generator 1.1.47
--$Section runtime-api/LuaGenericOnOffControlBehavior
-- This file is automatically generated. Edits will be overwritten without warning.

do
---An abstract base class for behaviors that support switching the entity on or off based on some condition.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaGenericOnOffControlBehavior.html)
---@class LuaGenericOnOffControlBehavior:LuaControlBehavior
---The circuit condition. Writing `nil` clears the circuit condition.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaGenericOnOffControlBehavior.html#circuit_condition)
---
---### Example
---
---```
----- Tell an entity to be active (for example a lamp to be lit) when it receives a
----- circuit signal of more than 4 chain signals.
---a_behavior.circuit_condition = {condition={
---  comparator=">",
---  first_signal={type="item", name="rail-chain-signal"},
---  constant=4}
---}
---```
---@field circuit_condition CircuitConditionDefinition
---`true` if this entity enable/disable state is controlled by circuit condition
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaGenericOnOffControlBehavior.html#circuit_enable_disable)
---@field circuit_enable_disable boolean
---`true` if this should connect to the logistic network.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaGenericOnOffControlBehavior.html#connect_to_logistic_network)
---@field connect_to_logistic_network boolean
---If the entity is currently disabled because of the control behavior.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaGenericOnOffControlBehavior.html#disabled)
---@field disabled boolean
---The logistic condition. Writing `nil` clears the logistic condition.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaGenericOnOffControlBehavior.html#logistic_condition)
---
---### Example
---
---```
----- Tell an entity to be active (for example a lamp to be lit) when the logistics
----- network it's connected to has more than four chain signals.
---a_behavior.logistic_condition = {condition={
---  comparator=">",
---  first_signal={type="item", name="rail-chain-signal"},
---  constant=4}
---}
---```
---@field logistic_condition CircuitConditionDefinition
local LuaGenericOnOffControlBehavior={
}
end

