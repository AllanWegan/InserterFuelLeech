---@meta _

--$Factorio 2.0.9
--$Generator 1.1.47
--$Section runtime-api/LuaTile
-- This file is automatically generated. Edits will be overwritten without warning.

do
---A single "square" on the map.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTile.html)
---@class LuaTile:LuaObject
---The name of the [LuaTilePrototype](https://lua-api.factorio.com/latest/classes/LuaTilePrototype.html) double hidden under this tile or `nil` if there is no double hidden tile.
---
---During normal gameplay, only [non-mineable](https://lua-api.factorio.com/latest/classes/LuaTilePrototype.html#mineable_properties) tiles can become double hidden. This can however be circumvented with [LuaSurface::set\_double\_hidden\_tile](https://lua-api.factorio.com/latest/classes/LuaSurface.html#set_double_hidden_tile).
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTile.html#double_hidden_tile)
---@field double_hidden_tile? string
---The name of the [LuaTilePrototype](https://lua-api.factorio.com/latest/classes/LuaTilePrototype.html) hidden under this tile, if any.
---
---During normal gameplay, only [non-mineable](https://lua-api.factorio.com/latest/classes/LuaTilePrototype.html#mineable_properties) or [foundation](https://lua-api.factorio.com/latest/classes/LuaTilePrototype.html#is_foundation) tiles can become hidden. This can however be circumvented with [LuaSurface::set\_hidden\_tile](https://lua-api.factorio.com/latest/classes/LuaSurface.html#set_hidden_tile).
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTile.html#hidden_tile)
---@field hidden_tile? string
---Prototype name of this tile. E.g. `"sand-3"` or `"grass-2"`.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTile.html#name)
---@field name string
---The class name of this object. Available even when `valid` is false. For LuaStruct objects it may also be suffixed with a dotted path to a member of the struct.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTile.html#object_name)
---@field object_name string
---The position this tile references.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTile.html#position)
---@field position TilePosition
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTile.html#prototype)
---@field prototype LuaTilePrototype
---The surface this tile is on.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTile.html#surface)
---@field surface LuaSurface
---Is this object valid? This Lua object holds a reference to an object within the game engine. It is possible that the game-engine object is removed whilst a mod still holds the corresponding Lua object. If that happens, the object becomes invalid, i.e. this attribute will be `false`. Mods are advised to check for object validity if any change to the game state might have occurred between the creation of the Lua object and its access.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTile.html#valid)
---@field valid boolean
local LuaTile={
---Cancels deconstruction if it is scheduled, does nothing otherwise.
---
---**Events:**
---
---* May raise [on\_cancelled\_deconstruction](https://lua-api.factorio.com/latest/events.html#on_cancelled_deconstruction) instantly.
---  Raised if the tile's deconstruction was successfully cancelled.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTile.html#cancel_deconstruction)
---@param force ForceID The force who did the deconstruction order.
---@param player? PlayerIdentification The player to set the last\_user to if any.
cancel_deconstruction = function(force, player) end;
---What type of things can collide with this tile?
---
---### Example
---
---```
----- Check if the character would collide with a tile
---game.player.print(tostring(game.player.surface.get_tile(1, 1).collides_with("player")))
---```
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTile.html#collides_with)
---@param layer CollisionLayerID 
---@return boolean 
collides_with = function(layer) end;
---Gets all tile ghosts on this tile.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTile.html#get_tile_ghosts)
---@param force? ForceID Get tile ghosts of this force.
---@return (LuaEntity)[]  #The tile ghosts.
get_tile_ghosts = function(force) end;
---Does this tile have any tile ghosts on it.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTile.html#has_tile_ghost)
---@param force? ForceID Check for tile ghosts of this force.
---@return boolean 
has_tile_ghost = function(force) end;
---Orders deconstruction of this tile by the given force.
---
---**Events:**
---
---* May raise [on\_marked\_for\_deconstruction](https://lua-api.factorio.com/latest/events.html#on_marked_for_deconstruction) instantly.
---  Raised if the tile was successfully marked for deconstruction.
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTile.html#order_deconstruction)
---@param force ForceID The force whose robots are supposed to do the deconstruction.
---@param player? PlayerIdentification The player to set the last\_user to if any.
---@return LuaEntity?  #The deconstructible tile proxy created, if any.
order_deconstruction = function(force, player) end;
---Is this tile marked for deconstruction?
---
---[View Documentation](https://lua-api.factorio.com/latest/classes/LuaTile.html#to_be_deconstructed)
---@param force? ForceID The force whose robots are supposed to do the deconstruction. If not given, checks if to be deconstructed by any force.
---@return boolean 
to_be_deconstructed = function(force) end;
}
end

