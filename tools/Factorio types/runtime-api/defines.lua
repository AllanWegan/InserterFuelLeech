---@meta _

--$Factorio 2.0.9
--$Generator 1.1.47
--$Section runtime-api/defines
-- This file is automatically generated. Edits will be overwritten without warning.

do
---[View Documentation](https://lua-api.factorio.com/latest/defines.html)
---@class defines
defines={
}
end

---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.alert_type)
---@enum defines.alert_type
defines.alert_type={
collector_path_blocked=#{} --[[@as defines.alert_type.collector_path_blocked ]],
custom=#{} --[[@as defines.alert_type.custom ]],
entity_destroyed=#{} --[[@as defines.alert_type.entity_destroyed ]],
entity_under_attack=#{} --[[@as defines.alert_type.entity_under_attack ]],
no_material_for_construction=#{} --[[@as defines.alert_type.no_material_for_construction ]],
no_platform_storage=#{} --[[@as defines.alert_type.no_platform_storage ]],
no_roboport_storage=#{} --[[@as defines.alert_type.no_roboport_storage ]],
no_storage=#{} --[[@as defines.alert_type.no_storage ]],
not_enough_construction_robots=#{} --[[@as defines.alert_type.not_enough_construction_robots ]],
not_enough_repair_packs=#{} --[[@as defines.alert_type.not_enough_repair_packs ]],
pipeline_overextended=#{} --[[@as defines.alert_type.pipeline_overextended ]],
platform_tile_building_blocked=#{} --[[@as defines.alert_type.platform_tile_building_blocked ]],
train_no_path=#{} --[[@as defines.alert_type.train_no_path ]],
train_out_of_fuel=#{} --[[@as defines.alert_type.train_out_of_fuel ]],
turret_fire=#{} --[[@as defines.alert_type.turret_fire ]],
turret_out_of_ammo=#{} --[[@as defines.alert_type.turret_out_of_ammo ]],
unclaimed_cargo=#{} --[[@as defines.alert_type.unclaimed_cargo ]],
}
---AI command exit status. See [LuaEntity::set\_command](https://lua-api.factorio.com/latest/classes/LuaEntity.html#set_command)
---
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.behavior_result)
---@enum defines.behavior_result
defines.behavior_result={
deleted=#{} --[[@as defines.behavior_result.deleted ]],
fail=#{} --[[@as defines.behavior_result.fail ]],
in_progress=#{} --[[@as defines.behavior_result.in_progress ]],
success=#{} --[[@as defines.behavior_result.success ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.build_check_type)
---@enum defines.build_check_type
defines.build_check_type={
blueprint_ghost=#{} --[[@as defines.build_check_type.blueprint_ghost ]],
ghost_revive=#{} --[[@as defines.build_check_type.ghost_revive ]],
manual=#{} --[[@as defines.build_check_type.manual ]],
manual_ghost=#{} --[[@as defines.build_check_type.manual_ghost ]],
script=#{} --[[@as defines.build_check_type.script ]],
script_ghost=#{} --[[@as defines.build_check_type.script_ghost ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.build_mode)
---@enum defines.build_mode
defines.build_mode={
forced=#{} --[[@as defines.build_mode.forced ]],
normal=#{} --[[@as defines.build_mode.normal ]],
superforced=#{} --[[@as defines.build_mode.superforced ]],
}
---State of a chain signal.
---
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.chain_signal_state)
---@enum defines.chain_signal_state
defines.chain_signal_state={
all_open=#{} --[[@as defines.chain_signal_state.all_open ]],
none=#{} --[[@as defines.chain_signal_state.none ]],
none_open=#{} --[[@as defines.chain_signal_state.none_open ]],
partially_open=#{} --[[@as defines.chain_signal_state.partially_open ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.chunk_generated_status)
---@enum defines.chunk_generated_status
defines.chunk_generated_status={
basic_tiles=#{} --[[@as defines.chunk_generated_status.basic_tiles ]],
corrected_tiles=#{} --[[@as defines.chunk_generated_status.corrected_tiles ]],
custom_tiles=#{} --[[@as defines.chunk_generated_status.custom_tiles ]],
entities=#{} --[[@as defines.chunk_generated_status.entities ]],
nothing=#{} --[[@as defines.chunk_generated_status.nothing ]],
tiles=#{} --[[@as defines.chunk_generated_status.tiles ]],
}
---Command given to units describing what they should do.
---
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.command)
---@enum defines.command
defines.command={
---Attack another entity.
attack=#{} --[[@as defines.command.attack ]],
---Go to a place and attack what you see.
attack_area=#{} --[[@as defines.command.attack_area ]],
---Go to a position and build a base there.
build_base=#{} --[[@as defines.command.build_base ]],
---Chain commands together, see [defines.compound_command](runtime:defines.compound_command).
compound=#{} --[[@as defines.command.compound ]],
---Flee from another entity.
flee=#{} --[[@as defines.command.flee ]],
---Go to a specific position.
go_to_location=#{} --[[@as defines.command.go_to_location ]],
---Do what your group wants you to do.
group=#{} --[[@as defines.command.group ]],
---Stop moving and stay where you are.
stop=#{} --[[@as defines.command.stop ]],
---Chill.
wander=#{} --[[@as defines.command.wander ]],
}
---How commands are joined together in a compound command (see [defines.command.compound](https://lua-api.factorio.com/latest/defines.html#defines.command.compound)).
---
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.compound_command)
---@enum defines.compound_command
defines.compound_command={
---Fail on first failure. Only succeeds if all commands (executed one after another) succeed.
logical_and=#{} --[[@as defines.compound_command.logical_and ]],
---Succeed on first success. Only fails if all commands (executed one after another) fail.
logical_or=#{} --[[@as defines.compound_command.logical_or ]],
---Execute all commands in sequence and fail or succeed depending on the return status of the last command.
return_last=#{} --[[@as defines.compound_command.return_last ]],
}
do
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.control_behavior)
---@class defines.control_behavior
defines.control_behavior={
}
end

do
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.control_behavior.cargo_landing_pad)
---@class defines.control_behavior.cargo_landing_pad
defines.control_behavior.cargo_landing_pad={
}
end

---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.control_behavior.cargo_landing_pad.exclusive_mode)
---@enum defines.control_behavior.cargo_landing_pad.exclusive_mode
defines.control_behavior.cargo_landing_pad.exclusive_mode={
none=#{} --[[@as defines.control_behavior.cargo_landing_pad.exclusive_mode.none ]],
send_contents=#{} --[[@as defines.control_behavior.cargo_landing_pad.exclusive_mode.send_contents ]],
set_requests=#{} --[[@as defines.control_behavior.cargo_landing_pad.exclusive_mode.set_requests ]],
}
do
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.control_behavior.inserter)
---@class defines.control_behavior.inserter
defines.control_behavior.inserter={
}
end

---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.control_behavior.inserter.hand_read_mode)
---@enum defines.control_behavior.inserter.hand_read_mode
defines.control_behavior.inserter.hand_read_mode={
hold=#{} --[[@as defines.control_behavior.inserter.hand_read_mode.hold ]],
pulse=#{} --[[@as defines.control_behavior.inserter.hand_read_mode.pulse ]],
}
do
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.control_behavior.lamp)
---@class defines.control_behavior.lamp
defines.control_behavior.lamp={
}
end

---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.control_behavior.lamp.color_mode)
---@enum defines.control_behavior.lamp.color_mode
defines.control_behavior.lamp.color_mode={
color_mapping=#{} --[[@as defines.control_behavior.lamp.color_mode.color_mapping ]],
components=#{} --[[@as defines.control_behavior.lamp.color_mode.components ]],
packed_rgb=#{} --[[@as defines.control_behavior.lamp.color_mode.packed_rgb ]],
}
do
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.control_behavior.logistic_container)
---@class defines.control_behavior.logistic_container
defines.control_behavior.logistic_container={
}
end

---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.control_behavior.logistic_container.exclusive_mode)
---@enum defines.control_behavior.logistic_container.exclusive_mode
defines.control_behavior.logistic_container.exclusive_mode={
none=#{} --[[@as defines.control_behavior.logistic_container.exclusive_mode.none ]],
send_contents=#{} --[[@as defines.control_behavior.logistic_container.exclusive_mode.send_contents ]],
set_requests=#{} --[[@as defines.control_behavior.logistic_container.exclusive_mode.set_requests ]],
}
do
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.control_behavior.mining_drill)
---@class defines.control_behavior.mining_drill
defines.control_behavior.mining_drill={
}
end

---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.control_behavior.mining_drill.resource_read_mode)
---@enum defines.control_behavior.mining_drill.resource_read_mode
defines.control_behavior.mining_drill.resource_read_mode={
entire_patch=#{} --[[@as defines.control_behavior.mining_drill.resource_read_mode.entire_patch ]],
this_miner=#{} --[[@as defines.control_behavior.mining_drill.resource_read_mode.this_miner ]],
}
do
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.control_behavior.roboport)
---@class defines.control_behavior.roboport
defines.control_behavior.roboport={
}
end

---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.control_behavior.roboport.read_items_mode)
---@enum defines.control_behavior.roboport.read_items_mode
defines.control_behavior.roboport.read_items_mode={
logistics=#{} --[[@as defines.control_behavior.roboport.read_items_mode.logistics ]],
missing_requests=#{} --[[@as defines.control_behavior.roboport.read_items_mode.missing_requests ]],
none=#{} --[[@as defines.control_behavior.roboport.read_items_mode.none ]],
}
do
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.control_behavior.rocket_silo)
---@class defines.control_behavior.rocket_silo
defines.control_behavior.rocket_silo={
}
end

---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.control_behavior.rocket_silo.read_mode)
---@enum defines.control_behavior.rocket_silo.read_mode
defines.control_behavior.rocket_silo.read_mode={
logistic_inventory=#{} --[[@as defines.control_behavior.rocket_silo.read_mode.logistic_inventory ]],
none=#{} --[[@as defines.control_behavior.rocket_silo.read_mode.none ]],
orbital_requests=#{} --[[@as defines.control_behavior.rocket_silo.read_mode.orbital_requests ]],
}
do
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.control_behavior.transport_belt)
---@class defines.control_behavior.transport_belt
defines.control_behavior.transport_belt={
}
end

---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.control_behavior.transport_belt.content_read_mode)
---@enum defines.control_behavior.transport_belt.content_read_mode
defines.control_behavior.transport_belt.content_read_mode={
entire_belt_hold=#{} --[[@as defines.control_behavior.transport_belt.content_read_mode.entire_belt_hold ]],
hold=#{} --[[@as defines.control_behavior.transport_belt.content_read_mode.hold ]],
pulse=#{} --[[@as defines.control_behavior.transport_belt.content_read_mode.pulse ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.control_behavior.type)
---@enum defines.control_behavior.type
defines.control_behavior.type={
---[LuaAccumulatorControlBehavior](runtime:LuaAccumulatorControlBehavior)
accumulator=#{} --[[@as defines.control_behavior.type.accumulator ]],
---[LuaAgriculturalTowerControlBehavior](runtime:LuaAgriculturalTowerControlBehavior)
agricultural_tower=#{} --[[@as defines.control_behavior.type.agricultural_tower ]],
---[LuaArithmeticCombinatorControlBehavior](runtime:LuaArithmeticCombinatorControlBehavior)
arithmetic_combinator=#{} --[[@as defines.control_behavior.type.arithmetic_combinator ]],
---[LuaArtilleryTurretControlBehavior](runtime:LuaArtilleryTurretControlBehavior)
artillery_turret=#{} --[[@as defines.control_behavior.type.artillery_turret ]],
---[LuaAssemblingMachineControlBehavior](runtime:LuaAssemblingMachineControlBehavior)
assembling_machine=#{} --[[@as defines.control_behavior.type.assembling_machine ]],
---[LuaAsteroidCollectorControlBehavior](runtime:LuaAsteroidCollectorControlBehavior)
asteroid_collector=#{} --[[@as defines.control_behavior.type.asteroid_collector ]],
---[LuaCargoLandingPadControlBehavior](runtime:LuaCargoLandingPadControlBehavior)
cargo_landing_pad=#{} --[[@as defines.control_behavior.type.cargo_landing_pad ]],
---[LuaConstantCombinatorControlBehavior](runtime:LuaConstantCombinatorControlBehavior)
constant_combinator=#{} --[[@as defines.control_behavior.type.constant_combinator ]],
---[LuaContainerControlBehavior](runtime:LuaContainerControlBehavior)
container=#{} --[[@as defines.control_behavior.type.container ]],
---[LuaDeciderCombinatorControlBehavior](runtime:LuaDeciderCombinatorControlBehavior)
decider_combinator=#{} --[[@as defines.control_behavior.type.decider_combinator ]],
---[LuaDisplayPanelControlBehavior](runtime:LuaDisplayPanelControlBehavior)
display_panel=#{} --[[@as defines.control_behavior.type.display_panel ]],
---[LuaGenericOnOffControlBehavior](runtime:LuaGenericOnOffControlBehavior)
generic_on_off=#{} --[[@as defines.control_behavior.type.generic_on_off ]],
---[LuaInserterControlBehavior](runtime:LuaInserterControlBehavior)
inserter=#{} --[[@as defines.control_behavior.type.inserter ]],
---[LuaLampControlBehavior](runtime:LuaLampControlBehavior)
lamp=#{} --[[@as defines.control_behavior.type.lamp ]],
---[LuaLoaderControlBehavior](runtime:LuaLoaderControlBehavior)
loader=#{} --[[@as defines.control_behavior.type.loader ]],
---[LuaLogisticContainerControlBehavior](runtime:LuaLogisticContainerControlBehavior)
logistic_container=#{} --[[@as defines.control_behavior.type.logistic_container ]],
---[LuaMiningDrillControlBehavior](runtime:LuaMiningDrillControlBehavior)
mining_drill=#{} --[[@as defines.control_behavior.type.mining_drill ]],
---[LuaProgrammableSpeakerControlBehavior](runtime:LuaProgrammableSpeakerControlBehavior)
programmable_speaker=#{} --[[@as defines.control_behavior.type.programmable_speaker ]],
---[LuaPumpControlBehavior](runtime:LuaPumpControlBehavior)
pump=#{} --[[@as defines.control_behavior.type.pump ]],
---[LuaRadarControlBehavior](runtime:LuaRadarControlBehavior)
radar=#{} --[[@as defines.control_behavior.type.radar ]],
---[LuaRailSignalBaseControlBehavior](runtime:LuaRailSignalBaseControlBehavior)
rail_chain_signal=#{} --[[@as defines.control_behavior.type.rail_chain_signal ]],
---[LuaRailSignalBaseControlBehavior](runtime:LuaRailSignalBaseControlBehavior)
rail_signal=#{} --[[@as defines.control_behavior.type.rail_signal ]],
---[LuaReactorControlBehavior](runtime:LuaReactorControlBehavior)
reactor=#{} --[[@as defines.control_behavior.type.reactor ]],
---[LuaRoboportControlBehavior](runtime:LuaRoboportControlBehavior)
roboport=#{} --[[@as defines.control_behavior.type.roboport ]],
---[LuaRocketSiloControlBehavior](runtime:LuaRocketSiloControlBehavior)
rocket_silo=#{} --[[@as defines.control_behavior.type.rocket_silo ]],
---[LuaSelectorCombinatorControlBehavior](runtime:LuaSelectorCombinatorControlBehavior)
selector_combinator=#{} --[[@as defines.control_behavior.type.selector_combinator ]],
---[LuaSpacePlatformHubControlBehavior](runtime:LuaSpacePlatformHubControlBehavior)
space_platform_hub=#{} --[[@as defines.control_behavior.type.space_platform_hub ]],
---[LuaStorageTankControlBehavior](runtime:LuaStorageTankControlBehavior)
storage_tank=#{} --[[@as defines.control_behavior.type.storage_tank ]],
---[LuaTrainStopControlBehavior](runtime:LuaTrainStopControlBehavior)
train_stop=#{} --[[@as defines.control_behavior.type.train_stop ]],
---[LuaTransportBeltControlBehavior](runtime:LuaTransportBeltControlBehavior)
transport_belt=#{} --[[@as defines.control_behavior.type.transport_belt ]],
---[LuaTurretControlBehavior](runtime:LuaTurretControlBehavior)
turret=#{} --[[@as defines.control_behavior.type.turret ]],
---[LuaWallControlBehavior](runtime:LuaWallControlBehavior)
wall=#{} --[[@as defines.control_behavior.type.wall ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.controllers)
---@enum defines.controllers
defines.controllers={
---The controller controls a character. This is the default controller in freeplay.
character=#{} --[[@as defines.controllers.character ]],
---The player can't interact with the world, and the camera pans around in a predefined manner.
cutscene=#{} --[[@as defines.controllers.cutscene ]],
---The Editor Controller near ultimate power to do almost anything in the game.
editor=#{} --[[@as defines.controllers.editor ]],
---Can't interact with the world, can only observe. Used in the multiplayer waiting-to-respawn screen.
ghost=#{} --[[@as defines.controllers.ghost ]],
---The controller isn't tied to a character. This is the default controller in sandbox.
god=#{} --[[@as defines.controllers.god ]],
---Can't move/change items but can build ghosts/change settings.
remote=#{} --[[@as defines.controllers.remote ]],
---Can't change anything in the world but can view anything.
spectator=#{} --[[@as defines.controllers.spectator ]],
}
do
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.deconstruction_item)
---@class defines.deconstruction_item
defines.deconstruction_item={
}
end

---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.deconstruction_item.entity_filter_mode)
---@enum defines.deconstruction_item.entity_filter_mode
defines.deconstruction_item.entity_filter_mode={
blacklist=#{} --[[@as defines.deconstruction_item.entity_filter_mode.blacklist ]],
whitelist=#{} --[[@as defines.deconstruction_item.entity_filter_mode.whitelist ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.deconstruction_item.tile_filter_mode)
---@enum defines.deconstruction_item.tile_filter_mode
defines.deconstruction_item.tile_filter_mode={
blacklist=#{} --[[@as defines.deconstruction_item.tile_filter_mode.blacklist ]],
whitelist=#{} --[[@as defines.deconstruction_item.tile_filter_mode.whitelist ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.deconstruction_item.tile_selection_mode)
---@enum defines.deconstruction_item.tile_selection_mode
defines.deconstruction_item.tile_selection_mode={
always=#{} --[[@as defines.deconstruction_item.tile_selection_mode.always ]],
never=#{} --[[@as defines.deconstruction_item.tile_selection_mode.never ]],
normal=#{} --[[@as defines.deconstruction_item.tile_selection_mode.normal ]],
only=#{} --[[@as defines.deconstruction_item.tile_selection_mode.only ]],
}
do
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.default_icon_size)
---@class defines.default_icon_size
defines.default_icon_size={
}
end

---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.difficulty)
---@enum defines.difficulty
defines.difficulty={
easy=#{} --[[@as defines.difficulty.easy ]],
hard=#{} --[[@as defines.difficulty.hard ]],
normal=#{} --[[@as defines.difficulty.normal ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.direction)
---@enum defines.direction
defines.direction={
east=#{} --[[@as defines.direction.east ]],
eastnortheast=#{} --[[@as defines.direction.eastnortheast ]],
eastsoutheast=#{} --[[@as defines.direction.eastsoutheast ]],
north=#{} --[[@as defines.direction.north ]],
northeast=#{} --[[@as defines.direction.northeast ]],
northnortheast=#{} --[[@as defines.direction.northnortheast ]],
northnorthwest=#{} --[[@as defines.direction.northnorthwest ]],
northwest=#{} --[[@as defines.direction.northwest ]],
south=#{} --[[@as defines.direction.south ]],
southeast=#{} --[[@as defines.direction.southeast ]],
southsoutheast=#{} --[[@as defines.direction.southsoutheast ]],
southsouthwest=#{} --[[@as defines.direction.southsouthwest ]],
southwest=#{} --[[@as defines.direction.southwest ]],
west=#{} --[[@as defines.direction.west ]],
westnorthwest=#{} --[[@as defines.direction.westnorthwest ]],
westsouthwest=#{} --[[@as defines.direction.westsouthwest ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.disconnect_reason)
---@enum defines.disconnect_reason
defines.disconnect_reason={
afk=#{} --[[@as defines.disconnect_reason.afk ]],
banned=#{} --[[@as defines.disconnect_reason.banned ]],
cannot_keep_up=#{} --[[@as defines.disconnect_reason.cannot_keep_up ]],
desync_limit_reached=#{} --[[@as defines.disconnect_reason.desync_limit_reached ]],
dropped=#{} --[[@as defines.disconnect_reason.dropped ]],
kicked=#{} --[[@as defines.disconnect_reason.kicked ]],
kicked_and_deleted=#{} --[[@as defines.disconnect_reason.kicked_and_deleted ]],
quit=#{} --[[@as defines.disconnect_reason.quit ]],
reconnect=#{} --[[@as defines.disconnect_reason.reconnect ]],
switching_servers=#{} --[[@as defines.disconnect_reason.switching_servers ]],
wrong_input=#{} --[[@as defines.disconnect_reason.wrong_input ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.distraction)
---@enum defines.distraction
defines.distraction={
---Attack closer enemy entities, including entities "built" by player (belts, inserters, chests).
by_anything=#{} --[[@as defines.distraction.by_anything ]],
---Attack when attacked.
by_damage=#{} --[[@as defines.distraction.by_damage ]],
---Attack closer enemy entities with force.
by_enemy=#{} --[[@as defines.distraction.by_enemy ]],
---Perform command even if someone attacks the unit.
none=#{} --[[@as defines.distraction.none ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.entity_status)
---@enum defines.entity_status
defines.entity_status={
---Only used if set through [LuaEntity::status](runtime:LuaEntity::status) or [ContainerPrototype::default_status](prototype:ContainerPrototype::default_status).
broken=#{} --[[@as defines.entity_status.broken ]],
---Used by rail signals.
cant_divide_segments=#{} --[[@as defines.entity_status.cant_divide_segments ]],
---Used by accumulators.
charging=#{} --[[@as defines.entity_status.charging ]],
closed_by_circuit_network=#{} --[[@as defines.entity_status.closed_by_circuit_network ]],
---Used by asteroid collectors.
computing_navigation=#{} --[[@as defines.entity_status.computing_navigation ]],
---Used by trains.
destination_stop_full=#{} --[[@as defines.entity_status.destination_stop_full ]],
---Used by constant combinators: Combinator is turned off via switch in GUI.
disabled=#{} --[[@as defines.entity_status.disabled ]],
disabled_by_control_behavior=#{} --[[@as defines.entity_status.disabled_by_control_behavior ]],
disabled_by_script=#{} --[[@as defines.entity_status.disabled_by_script ]],
---Used by accumulators.
discharging=#{} --[[@as defines.entity_status.discharging ]],
---Used by crafting machines.
fluid_ingredient_shortage=#{} --[[@as defines.entity_status.fluid_ingredient_shortage ]],
frozen=#{} --[[@as defines.entity_status.frozen ]],
---Used by burner energy sources.
full_burnt_result_output=#{} --[[@as defines.entity_status.full_burnt_result_output ]],
---Used by crafting machines, boilers, burner energy sources and reactors: Reactor/burner has full burnt result inventory, boiler has full output fluidbox.
full_output=#{} --[[@as defines.entity_status.full_output ]],
---Used by accumulators.
fully_charged=#{} --[[@as defines.entity_status.fully_charged ]],
---Used by ghosts.
ghost=#{} --[[@as defines.entity_status.ghost ]],
---Used by crafting machines.
item_ingredient_shortage=#{} --[[@as defines.entity_status.item_ingredient_shortage ]],
---Used by the rocket silo.
launching_rocket=#{} --[[@as defines.entity_status.launching_rocket ]],
---Used by boilers and fluid turrets: Boiler still has some fluid but is about to run out.
low_input_fluid=#{} --[[@as defines.entity_status.low_input_fluid ]],
low_power=#{} --[[@as defines.entity_status.low_power ]],
---Used by heat energy sources.
low_temperature=#{} --[[@as defines.entity_status.low_temperature ]],
marked_for_deconstruction=#{} --[[@as defines.entity_status.marked_for_deconstruction ]],
---Used by mining drills when the mining fluid is missing.
missing_required_fluid=#{} --[[@as defines.entity_status.missing_required_fluid ]],
---Used by labs.
missing_science_packs=#{} --[[@as defines.entity_status.missing_science_packs ]],
---Used by power switches.
networks_connected=#{} --[[@as defines.entity_status.networks_connected ]],
---Used by power switches.
networks_disconnected=#{} --[[@as defines.entity_status.networks_disconnected ]],
---Used by ammo turrets.
no_ammo=#{} --[[@as defines.entity_status.no_ammo ]],
---Used by filter inserters.
no_filter=#{} --[[@as defines.entity_status.no_filter ]],
no_fuel=#{} --[[@as defines.entity_status.no_fuel ]],
---Used by furnaces.
no_ingredients=#{} --[[@as defines.entity_status.no_ingredients ]],
---Used by boilers, fluid turrets and fluid energy sources: Boiler has no fluid to work with.
no_input_fluid=#{} --[[@as defines.entity_status.no_input_fluid ]],
---Used by mining drills.
no_minable_resources=#{} --[[@as defines.entity_status.no_minable_resources ]],
---Used by beacons.
no_modules_to_transmit=#{} --[[@as defines.entity_status.no_modules_to_transmit ]],
---Used by trains and space platform hubs.
no_path=#{} --[[@as defines.entity_status.no_path ]],
no_power=#{} --[[@as defines.entity_status.no_power ]],
---Used by assembling machines.
no_recipe=#{} --[[@as defines.entity_status.no_recipe ]],
---Used by labs.
no_research_in_progress=#{} --[[@as defines.entity_status.no_research_in_progress ]],
---Used by agricultural towers.
no_spot_seedable_by_inputs=#{} --[[@as defines.entity_status.no_spot_seedable_by_inputs ]],
normal=#{} --[[@as defines.entity_status.normal ]],
---Used by cargo bays.
not_connected_to_hub_or_pad=#{} --[[@as defines.entity_status.not_connected_to_hub_or_pad ]],
---Used by rail signals.
not_connected_to_rail=#{} --[[@as defines.entity_status.not_connected_to_rail ]],
---Used by agricultural towers.
not_enough_space_in_output=#{} --[[@as defines.entity_status.not_enough_space_in_output ]],
---Used by space platform hubs.
not_enough_thrust=#{} --[[@as defines.entity_status.not_enough_thrust ]],
---Used by generators and solar panels.
not_plugged_in_electric_network=#{} --[[@as defines.entity_status.not_plugged_in_electric_network ]],
---Used by space platform hubs.
on_the_way=#{} --[[@as defines.entity_status.on_the_way ]],
opened_by_circuit_network=#{} --[[@as defines.entity_status.opened_by_circuit_network ]],
---Used by logistic containers.
out_of_logistic_network=#{} --[[@as defines.entity_status.out_of_logistic_network ]],
---Used by space platform hubs.
paused=#{} --[[@as defines.entity_status.paused ]],
---Used by pipes, pipes to ground and storage tanks.
pipeline_overextended=#{} --[[@as defines.entity_status.pipeline_overextended ]],
---Used by the rocket silo.
preparing_rocket_for_launch=#{} --[[@as defines.entity_status.preparing_rocket_for_launch ]],
---Used by roboports.
recharging_after_power_outage=#{} --[[@as defines.entity_status.recharging_after_power_outage ]],
---Used by thrusters.
thrust_not_required=#{} --[[@as defines.entity_status.thrust_not_required ]],
---Used by lamps.
turned_off_during_daytime=#{} --[[@as defines.entity_status.turned_off_during_daytime ]],
---Used by trains.
waiting_at_stop=#{} --[[@as defines.entity_status.waiting_at_stop ]],
---Used by inserters when wait_for_full_hand is set.
waiting_for_more_items=#{} --[[@as defines.entity_status.waiting_for_more_items ]],
---Used by agricultural towers.
waiting_for_plants_to_grow=#{} --[[@as defines.entity_status.waiting_for_plants_to_grow ]],
---Used by space platform hubs.
waiting_for_rockets_to_arrive=#{} --[[@as defines.entity_status.waiting_for_rockets_to_arrive ]],
---Used by inserters.
waiting_for_source_items=#{} --[[@as defines.entity_status.waiting_for_source_items ]],
---Used by inserters and mining drills.
waiting_for_space_in_destination=#{} --[[@as defines.entity_status.waiting_for_space_in_destination ]],
---Used by the rocket silo.
waiting_for_space_in_platform_hub=#{} --[[@as defines.entity_status.waiting_for_space_in_platform_hub ]],
---Used by inserters targeting entity ghosts.
waiting_for_target_to_be_built=#{} --[[@as defines.entity_status.waiting_for_target_to_be_built ]],
---Used by inserters targeting rails.
waiting_for_train=#{} --[[@as defines.entity_status.waiting_for_train ]],
---Used by space platform hubs.
waiting_in_orbit=#{} --[[@as defines.entity_status.waiting_in_orbit ]],
---Used by the rocket silo.
waiting_to_launch_rocket=#{} --[[@as defines.entity_status.waiting_to_launch_rocket ]],
working=#{} --[[@as defines.entity_status.working ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.entity_status_diode)
---@enum defines.entity_status_diode
defines.entity_status_diode={
green=#{} --[[@as defines.entity_status_diode.green ]],
red=#{} --[[@as defines.entity_status_diode.red ]],
yellow=#{} --[[@as defines.entity_status_diode.yellow ]],
}
---See the [events page](https://lua-api.factorio.com/latest/events.html) for more info on what events contain and when they get raised.
---
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.events)
---@enum defines.events
defines.events={
on_achievement_gained=#{} --[[@as defines.events.on_achievement_gained ]],
on_ai_command_completed=#{} --[[@as defines.events.on_ai_command_completed ]],
on_area_cloned=#{} --[[@as defines.events.on_area_cloned ]],
on_biter_base_built=#{} --[[@as defines.events.on_biter_base_built ]],
on_brush_cloned=#{} --[[@as defines.events.on_brush_cloned ]],
on_build_base_arrived=#{} --[[@as defines.events.on_build_base_arrived ]],
on_built_entity=#{} --[[@as defines.events.on_built_entity ]],
on_cancelled_deconstruction=#{} --[[@as defines.events.on_cancelled_deconstruction ]],
on_cancelled_upgrade=#{} --[[@as defines.events.on_cancelled_upgrade ]],
on_character_corpse_expired=#{} --[[@as defines.events.on_character_corpse_expired ]],
on_chart_tag_added=#{} --[[@as defines.events.on_chart_tag_added ]],
on_chart_tag_modified=#{} --[[@as defines.events.on_chart_tag_modified ]],
on_chart_tag_removed=#{} --[[@as defines.events.on_chart_tag_removed ]],
on_chunk_charted=#{} --[[@as defines.events.on_chunk_charted ]],
on_chunk_deleted=#{} --[[@as defines.events.on_chunk_deleted ]],
on_chunk_generated=#{} --[[@as defines.events.on_chunk_generated ]],
on_combat_robot_expired=#{} --[[@as defines.events.on_combat_robot_expired ]],
on_console_chat=#{} --[[@as defines.events.on_console_chat ]],
on_console_command=#{} --[[@as defines.events.on_console_command ]],
on_cutscene_cancelled=#{} --[[@as defines.events.on_cutscene_cancelled ]],
on_cutscene_finished=#{} --[[@as defines.events.on_cutscene_finished ]],
on_cutscene_started=#{} --[[@as defines.events.on_cutscene_started ]],
on_cutscene_waypoint_reached=#{} --[[@as defines.events.on_cutscene_waypoint_reached ]],
on_entity_cloned=#{} --[[@as defines.events.on_entity_cloned ]],
on_entity_color_changed=#{} --[[@as defines.events.on_entity_color_changed ]],
on_entity_damaged=#{} --[[@as defines.events.on_entity_damaged ]],
on_entity_died=#{} --[[@as defines.events.on_entity_died ]],
on_entity_logistic_slot_changed=#{} --[[@as defines.events.on_entity_logistic_slot_changed ]],
on_entity_renamed=#{} --[[@as defines.events.on_entity_renamed ]],
on_entity_settings_pasted=#{} --[[@as defines.events.on_entity_settings_pasted ]],
on_entity_spawned=#{} --[[@as defines.events.on_entity_spawned ]],
on_equipment_inserted=#{} --[[@as defines.events.on_equipment_inserted ]],
on_equipment_removed=#{} --[[@as defines.events.on_equipment_removed ]],
on_force_cease_fire_changed=#{} --[[@as defines.events.on_force_cease_fire_changed ]],
on_force_created=#{} --[[@as defines.events.on_force_created ]],
on_force_friends_changed=#{} --[[@as defines.events.on_force_friends_changed ]],
on_force_reset=#{} --[[@as defines.events.on_force_reset ]],
on_forces_merged=#{} --[[@as defines.events.on_forces_merged ]],
on_forces_merging=#{} --[[@as defines.events.on_forces_merging ]],
on_game_created_from_scenario=#{} --[[@as defines.events.on_game_created_from_scenario ]],
on_gui_checked_state_changed=#{} --[[@as defines.events.on_gui_checked_state_changed ]],
on_gui_click=#{} --[[@as defines.events.on_gui_click ]],
on_gui_closed=#{} --[[@as defines.events.on_gui_closed ]],
on_gui_confirmed=#{} --[[@as defines.events.on_gui_confirmed ]],
on_gui_elem_changed=#{} --[[@as defines.events.on_gui_elem_changed ]],
on_gui_hover=#{} --[[@as defines.events.on_gui_hover ]],
on_gui_leave=#{} --[[@as defines.events.on_gui_leave ]],
on_gui_location_changed=#{} --[[@as defines.events.on_gui_location_changed ]],
on_gui_opened=#{} --[[@as defines.events.on_gui_opened ]],
on_gui_selected_tab_changed=#{} --[[@as defines.events.on_gui_selected_tab_changed ]],
on_gui_selection_state_changed=#{} --[[@as defines.events.on_gui_selection_state_changed ]],
on_gui_switch_state_changed=#{} --[[@as defines.events.on_gui_switch_state_changed ]],
on_gui_text_changed=#{} --[[@as defines.events.on_gui_text_changed ]],
on_gui_value_changed=#{} --[[@as defines.events.on_gui_value_changed ]],
on_land_mine_armed=#{} --[[@as defines.events.on_land_mine_armed ]],
on_lua_shortcut=#{} --[[@as defines.events.on_lua_shortcut ]],
on_marked_for_deconstruction=#{} --[[@as defines.events.on_marked_for_deconstruction ]],
on_marked_for_upgrade=#{} --[[@as defines.events.on_marked_for_upgrade ]],
on_market_item_purchased=#{} --[[@as defines.events.on_market_item_purchased ]],
on_mod_item_opened=#{} --[[@as defines.events.on_mod_item_opened ]],
on_object_destroyed=#{} --[[@as defines.events.on_object_destroyed ]],
on_permission_group_added=#{} --[[@as defines.events.on_permission_group_added ]],
on_permission_group_deleted=#{} --[[@as defines.events.on_permission_group_deleted ]],
on_permission_group_edited=#{} --[[@as defines.events.on_permission_group_edited ]],
on_permission_string_imported=#{} --[[@as defines.events.on_permission_string_imported ]],
on_picked_up_item=#{} --[[@as defines.events.on_picked_up_item ]],
on_player_alt_reverse_selected_area=#{} --[[@as defines.events.on_player_alt_reverse_selected_area ]],
on_player_alt_selected_area=#{} --[[@as defines.events.on_player_alt_selected_area ]],
on_player_ammo_inventory_changed=#{} --[[@as defines.events.on_player_ammo_inventory_changed ]],
on_player_armor_inventory_changed=#{} --[[@as defines.events.on_player_armor_inventory_changed ]],
on_player_banned=#{} --[[@as defines.events.on_player_banned ]],
on_player_built_tile=#{} --[[@as defines.events.on_player_built_tile ]],
on_player_cancelled_crafting=#{} --[[@as defines.events.on_player_cancelled_crafting ]],
on_player_changed_force=#{} --[[@as defines.events.on_player_changed_force ]],
on_player_changed_position=#{} --[[@as defines.events.on_player_changed_position ]],
on_player_changed_surface=#{} --[[@as defines.events.on_player_changed_surface ]],
on_player_cheat_mode_disabled=#{} --[[@as defines.events.on_player_cheat_mode_disabled ]],
on_player_cheat_mode_enabled=#{} --[[@as defines.events.on_player_cheat_mode_enabled ]],
on_player_clicked_gps_tag=#{} --[[@as defines.events.on_player_clicked_gps_tag ]],
on_player_configured_blueprint=#{} --[[@as defines.events.on_player_configured_blueprint ]],
on_player_controller_changed=#{} --[[@as defines.events.on_player_controller_changed ]],
on_player_crafted_item=#{} --[[@as defines.events.on_player_crafted_item ]],
on_player_created=#{} --[[@as defines.events.on_player_created ]],
on_player_cursor_stack_changed=#{} --[[@as defines.events.on_player_cursor_stack_changed ]],
on_player_deconstructed_area=#{} --[[@as defines.events.on_player_deconstructed_area ]],
on_player_demoted=#{} --[[@as defines.events.on_player_demoted ]],
on_player_died=#{} --[[@as defines.events.on_player_died ]],
on_player_display_density_scale_changed=#{} --[[@as defines.events.on_player_display_density_scale_changed ]],
on_player_display_resolution_changed=#{} --[[@as defines.events.on_player_display_resolution_changed ]],
on_player_display_scale_changed=#{} --[[@as defines.events.on_player_display_scale_changed ]],
on_player_driving_changed_state=#{} --[[@as defines.events.on_player_driving_changed_state ]],
on_player_dropped_item=#{} --[[@as defines.events.on_player_dropped_item ]],
on_player_fast_transferred=#{} --[[@as defines.events.on_player_fast_transferred ]],
on_player_flipped_entity=#{} --[[@as defines.events.on_player_flipped_entity ]],
on_player_flushed_fluid=#{} --[[@as defines.events.on_player_flushed_fluid ]],
on_player_gun_inventory_changed=#{} --[[@as defines.events.on_player_gun_inventory_changed ]],
on_player_input_method_changed=#{} --[[@as defines.events.on_player_input_method_changed ]],
on_player_joined_game=#{} --[[@as defines.events.on_player_joined_game ]],
on_player_kicked=#{} --[[@as defines.events.on_player_kicked ]],
on_player_left_game=#{} --[[@as defines.events.on_player_left_game ]],
on_player_locale_changed=#{} --[[@as defines.events.on_player_locale_changed ]],
on_player_main_inventory_changed=#{} --[[@as defines.events.on_player_main_inventory_changed ]],
on_player_mined_entity=#{} --[[@as defines.events.on_player_mined_entity ]],
on_player_mined_item=#{} --[[@as defines.events.on_player_mined_item ]],
on_player_mined_tile=#{} --[[@as defines.events.on_player_mined_tile ]],
on_player_muted=#{} --[[@as defines.events.on_player_muted ]],
on_player_pipette=#{} --[[@as defines.events.on_player_pipette ]],
on_player_placed_equipment=#{} --[[@as defines.events.on_player_placed_equipment ]],
on_player_promoted=#{} --[[@as defines.events.on_player_promoted ]],
on_player_removed=#{} --[[@as defines.events.on_player_removed ]],
on_player_removed_equipment=#{} --[[@as defines.events.on_player_removed_equipment ]],
on_player_repaired_entity=#{} --[[@as defines.events.on_player_repaired_entity ]],
on_player_respawned=#{} --[[@as defines.events.on_player_respawned ]],
on_player_reverse_selected_area=#{} --[[@as defines.events.on_player_reverse_selected_area ]],
on_player_rotated_entity=#{} --[[@as defines.events.on_player_rotated_entity ]],
on_player_selected_area=#{} --[[@as defines.events.on_player_selected_area ]],
on_player_set_quick_bar_slot=#{} --[[@as defines.events.on_player_set_quick_bar_slot ]],
on_player_setup_blueprint=#{} --[[@as defines.events.on_player_setup_blueprint ]],
on_player_toggled_alt_mode=#{} --[[@as defines.events.on_player_toggled_alt_mode ]],
on_player_toggled_map_editor=#{} --[[@as defines.events.on_player_toggled_map_editor ]],
on_player_trash_inventory_changed=#{} --[[@as defines.events.on_player_trash_inventory_changed ]],
on_player_unbanned=#{} --[[@as defines.events.on_player_unbanned ]],
on_player_unmuted=#{} --[[@as defines.events.on_player_unmuted ]],
on_player_used_capsule=#{} --[[@as defines.events.on_player_used_capsule ]],
on_player_used_spidertron_remote=#{} --[[@as defines.events.on_player_used_spidertron_remote ]],
on_post_entity_died=#{} --[[@as defines.events.on_post_entity_died ]],
on_pre_build=#{} --[[@as defines.events.on_pre_build ]],
on_pre_chunk_deleted=#{} --[[@as defines.events.on_pre_chunk_deleted ]],
on_pre_entity_settings_pasted=#{} --[[@as defines.events.on_pre_entity_settings_pasted ]],
on_pre_ghost_deconstructed=#{} --[[@as defines.events.on_pre_ghost_deconstructed ]],
on_pre_ghost_upgraded=#{} --[[@as defines.events.on_pre_ghost_upgraded ]],
on_pre_permission_group_deleted=#{} --[[@as defines.events.on_pre_permission_group_deleted ]],
on_pre_permission_string_imported=#{} --[[@as defines.events.on_pre_permission_string_imported ]],
on_pre_player_crafted_item=#{} --[[@as defines.events.on_pre_player_crafted_item ]],
on_pre_player_died=#{} --[[@as defines.events.on_pre_player_died ]],
on_pre_player_left_game=#{} --[[@as defines.events.on_pre_player_left_game ]],
on_pre_player_mined_item=#{} --[[@as defines.events.on_pre_player_mined_item ]],
on_pre_player_removed=#{} --[[@as defines.events.on_pre_player_removed ]],
on_pre_player_toggled_map_editor=#{} --[[@as defines.events.on_pre_player_toggled_map_editor ]],
on_pre_robot_exploded_cliff=#{} --[[@as defines.events.on_pre_robot_exploded_cliff ]],
on_pre_scenario_finished=#{} --[[@as defines.events.on_pre_scenario_finished ]],
on_pre_script_inventory_resized=#{} --[[@as defines.events.on_pre_script_inventory_resized ]],
on_pre_surface_cleared=#{} --[[@as defines.events.on_pre_surface_cleared ]],
on_pre_surface_deleted=#{} --[[@as defines.events.on_pre_surface_deleted ]],
on_redo_applied=#{} --[[@as defines.events.on_redo_applied ]],
on_research_cancelled=#{} --[[@as defines.events.on_research_cancelled ]],
on_research_finished=#{} --[[@as defines.events.on_research_finished ]],
on_research_moved=#{} --[[@as defines.events.on_research_moved ]],
on_research_reversed=#{} --[[@as defines.events.on_research_reversed ]],
on_research_started=#{} --[[@as defines.events.on_research_started ]],
on_resource_depleted=#{} --[[@as defines.events.on_resource_depleted ]],
on_robot_built_entity=#{} --[[@as defines.events.on_robot_built_entity ]],
on_robot_built_tile=#{} --[[@as defines.events.on_robot_built_tile ]],
on_robot_exploded_cliff=#{} --[[@as defines.events.on_robot_exploded_cliff ]],
on_robot_mined=#{} --[[@as defines.events.on_robot_mined ]],
on_robot_mined_entity=#{} --[[@as defines.events.on_robot_mined_entity ]],
on_robot_mined_tile=#{} --[[@as defines.events.on_robot_mined_tile ]],
on_robot_pre_mined=#{} --[[@as defines.events.on_robot_pre_mined ]],
on_rocket_launch_ordered=#{} --[[@as defines.events.on_rocket_launch_ordered ]],
on_rocket_launched=#{} --[[@as defines.events.on_rocket_launched ]],
on_runtime_mod_setting_changed=#{} --[[@as defines.events.on_runtime_mod_setting_changed ]],
on_script_inventory_resized=#{} --[[@as defines.events.on_script_inventory_resized ]],
on_script_path_request_finished=#{} --[[@as defines.events.on_script_path_request_finished ]],
on_script_trigger_effect=#{} --[[@as defines.events.on_script_trigger_effect ]],
on_sector_scanned=#{} --[[@as defines.events.on_sector_scanned ]],
on_segment_entity_created=#{} --[[@as defines.events.on_segment_entity_created ]],
on_selected_entity_changed=#{} --[[@as defines.events.on_selected_entity_changed ]],
on_space_platform_built_entity=#{} --[[@as defines.events.on_space_platform_built_entity ]],
on_space_platform_built_tile=#{} --[[@as defines.events.on_space_platform_built_tile ]],
on_space_platform_changed_state=#{} --[[@as defines.events.on_space_platform_changed_state ]],
on_space_platform_mined_entity=#{} --[[@as defines.events.on_space_platform_mined_entity ]],
on_space_platform_mined_item=#{} --[[@as defines.events.on_space_platform_mined_item ]],
on_space_platform_mined_tile=#{} --[[@as defines.events.on_space_platform_mined_tile ]],
on_space_platform_pre_mined=#{} --[[@as defines.events.on_space_platform_pre_mined ]],
on_spider_command_completed=#{} --[[@as defines.events.on_spider_command_completed ]],
on_string_translated=#{} --[[@as defines.events.on_string_translated ]],
on_surface_cleared=#{} --[[@as defines.events.on_surface_cleared ]],
on_surface_created=#{} --[[@as defines.events.on_surface_created ]],
on_surface_deleted=#{} --[[@as defines.events.on_surface_deleted ]],
on_surface_imported=#{} --[[@as defines.events.on_surface_imported ]],
on_surface_renamed=#{} --[[@as defines.events.on_surface_renamed ]],
on_technology_effects_reset=#{} --[[@as defines.events.on_technology_effects_reset ]],
on_tick=#{} --[[@as defines.events.on_tick ]],
on_train_changed_state=#{} --[[@as defines.events.on_train_changed_state ]],
on_train_created=#{} --[[@as defines.events.on_train_created ]],
on_train_schedule_changed=#{} --[[@as defines.events.on_train_schedule_changed ]],
on_trigger_created_entity=#{} --[[@as defines.events.on_trigger_created_entity ]],
on_trigger_fired_artillery=#{} --[[@as defines.events.on_trigger_fired_artillery ]],
on_undo_applied=#{} --[[@as defines.events.on_undo_applied ]],
on_unit_added_to_group=#{} --[[@as defines.events.on_unit_added_to_group ]],
on_unit_group_created=#{} --[[@as defines.events.on_unit_group_created ]],
on_unit_group_finished_gathering=#{} --[[@as defines.events.on_unit_group_finished_gathering ]],
on_unit_removed_from_group=#{} --[[@as defines.events.on_unit_removed_from_group ]],
on_worker_robot_expired=#{} --[[@as defines.events.on_worker_robot_expired ]],
script_raised_built=#{} --[[@as defines.events.script_raised_built ]],
script_raised_destroy=#{} --[[@as defines.events.script_raised_destroy ]],
script_raised_revive=#{} --[[@as defines.events.script_raised_revive ]],
script_raised_set_tiles=#{} --[[@as defines.events.script_raised_set_tiles ]],
script_raised_teleported=#{} --[[@as defines.events.script_raised_teleported ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.flow_precision_index)
---@enum defines.flow_precision_index
defines.flow_precision_index={
fifty_hours=#{} --[[@as defines.flow_precision_index.fifty_hours ]],
five_seconds=#{} --[[@as defines.flow_precision_index.five_seconds ]],
one_hour=#{} --[[@as defines.flow_precision_index.one_hour ]],
one_minute=#{} --[[@as defines.flow_precision_index.one_minute ]],
one_thousand_hours=#{} --[[@as defines.flow_precision_index.one_thousand_hours ]],
ten_hours=#{} --[[@as defines.flow_precision_index.ten_hours ]],
ten_minutes=#{} --[[@as defines.flow_precision_index.ten_minutes ]],
two_hundred_fifty_hours=#{} --[[@as defines.flow_precision_index.two_hundred_fifty_hours ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.game_controller_interaction)
---@enum defines.game_controller_interaction
defines.game_controller_interaction={
---Game controller will always hover this element regardless of type or state.
always=#{} --[[@as defines.game_controller_interaction.always ]],
---Never hover this element with a game controller.
never=#{} --[[@as defines.game_controller_interaction.never ]],
---Hover according to the element type and implementation.
normal=#{} --[[@as defines.game_controller_interaction.normal ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.group_state)
---@enum defines.group_state
defines.group_state={
attacking_distraction=#{} --[[@as defines.group_state.attacking_distraction ]],
attacking_target=#{} --[[@as defines.group_state.attacking_target ]],
finished=#{} --[[@as defines.group_state.finished ]],
gathering=#{} --[[@as defines.group_state.gathering ]],
moving=#{} --[[@as defines.group_state.moving ]],
pathfinding=#{} --[[@as defines.group_state.pathfinding ]],
wander_in_group=#{} --[[@as defines.group_state.wander_in_group ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.gui_type)
---@enum defines.gui_type
defines.gui_type={
achievement=#{} --[[@as defines.gui_type.achievement ]],
blueprint_library=#{} --[[@as defines.gui_type.blueprint_library ]],
bonus=#{} --[[@as defines.gui_type.bonus ]],
controller=#{} --[[@as defines.gui_type.controller ]],
custom=#{} --[[@as defines.gui_type.custom ]],
entity=#{} --[[@as defines.gui_type.entity ]],
equipment=#{} --[[@as defines.gui_type.equipment ]],
global_electric_network=#{} --[[@as defines.gui_type.global_electric_network ]],
item=#{} --[[@as defines.gui_type.item ]],
logistic=#{} --[[@as defines.gui_type.logistic ]],
none=#{} --[[@as defines.gui_type.none ]],
opened_entity_grid=#{} --[[@as defines.gui_type.opened_entity_grid ]],
other_player=#{} --[[@as defines.gui_type.other_player ]],
permissions=#{} --[[@as defines.gui_type.permissions ]],
player_management=#{} --[[@as defines.gui_type.player_management ]],
production=#{} --[[@as defines.gui_type.production ]],
script_inventory=#{} --[[@as defines.gui_type.script_inventory ]],
server_management=#{} --[[@as defines.gui_type.server_management ]],
tile=#{} --[[@as defines.gui_type.tile ]],
trains=#{} --[[@as defines.gui_type.trains ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.input_action)
---@enum defines.input_action
defines.input_action={
activate_interrupt=#{} --[[@as defines.input_action.activate_interrupt ]],
activate_paste=#{} --[[@as defines.input_action.activate_paste ]],
add_decider_combinator_condition=#{} --[[@as defines.input_action.add_decider_combinator_condition ]],
add_decider_combinator_output=#{} --[[@as defines.input_action.add_decider_combinator_output ]],
add_logistic_section=#{} --[[@as defines.input_action.add_logistic_section ]],
add_permission_group=#{} --[[@as defines.input_action.add_permission_group ]],
add_pin=#{} --[[@as defines.input_action.add_pin ]],
add_train_interrupt=#{} --[[@as defines.input_action.add_train_interrupt ]],
add_train_station=#{} --[[@as defines.input_action.add_train_station ]],
adjust_blueprint_snapping=#{} --[[@as defines.input_action.adjust_blueprint_snapping ]],
admin_action=#{} --[[@as defines.input_action.admin_action ]],
alt_reverse_select_area=#{} --[[@as defines.input_action.alt_reverse_select_area ]],
alt_select_area=#{} --[[@as defines.input_action.alt_select_area ]],
alt_select_blueprint_entities=#{} --[[@as defines.input_action.alt_select_blueprint_entities ]],
alternative_copy=#{} --[[@as defines.input_action.alternative_copy ]],
begin_mining=#{} --[[@as defines.input_action.begin_mining ]],
begin_mining_terrain=#{} --[[@as defines.input_action.begin_mining_terrain ]],
build=#{} --[[@as defines.input_action.build ]],
build_rail=#{} --[[@as defines.input_action.build_rail ]],
build_terrain=#{} --[[@as defines.input_action.build_terrain ]],
cancel_craft=#{} --[[@as defines.input_action.cancel_craft ]],
cancel_deconstruct=#{} --[[@as defines.input_action.cancel_deconstruct ]],
cancel_delete_space_platform=#{} --[[@as defines.input_action.cancel_delete_space_platform ]],
cancel_new_blueprint=#{} --[[@as defines.input_action.cancel_new_blueprint ]],
cancel_research=#{} --[[@as defines.input_action.cancel_research ]],
cancel_upgrade=#{} --[[@as defines.input_action.cancel_upgrade ]],
change_active_character_tab=#{} --[[@as defines.input_action.change_active_character_tab ]],
change_active_item_group_for_crafting=#{} --[[@as defines.input_action.change_active_item_group_for_crafting ]],
change_active_item_group_for_filters=#{} --[[@as defines.input_action.change_active_item_group_for_filters ]],
change_active_quick_bar=#{} --[[@as defines.input_action.change_active_quick_bar ]],
change_arithmetic_combinator_parameters=#{} --[[@as defines.input_action.change_arithmetic_combinator_parameters ]],
change_entity_label=#{} --[[@as defines.input_action.change_entity_label ]],
change_item_label=#{} --[[@as defines.input_action.change_item_label ]],
change_logistic_point_group=#{} --[[@as defines.input_action.change_logistic_point_group ]],
change_multiplayer_config=#{} --[[@as defines.input_action.change_multiplayer_config ]],
change_picking_state=#{} --[[@as defines.input_action.change_picking_state ]],
change_programmable_speaker_alert_parameters=#{} --[[@as defines.input_action.change_programmable_speaker_alert_parameters ]],
change_programmable_speaker_circuit_parameters=#{} --[[@as defines.input_action.change_programmable_speaker_circuit_parameters ]],
change_programmable_speaker_parameters=#{} --[[@as defines.input_action.change_programmable_speaker_parameters ]],
change_riding_state=#{} --[[@as defines.input_action.change_riding_state ]],
change_selector_combinator_parameters=#{} --[[@as defines.input_action.change_selector_combinator_parameters ]],
change_shooting_state=#{} --[[@as defines.input_action.change_shooting_state ]],
change_train_name=#{} --[[@as defines.input_action.change_train_name ]],
change_train_stop_station=#{} --[[@as defines.input_action.change_train_stop_station ]],
change_train_wait_condition=#{} --[[@as defines.input_action.change_train_wait_condition ]],
change_train_wait_condition_data=#{} --[[@as defines.input_action.change_train_wait_condition_data ]],
clear_cursor=#{} --[[@as defines.input_action.clear_cursor ]],
connect_rolling_stock=#{} --[[@as defines.input_action.connect_rolling_stock ]],
copy=#{} --[[@as defines.input_action.copy ]],
copy_entity_settings=#{} --[[@as defines.input_action.copy_entity_settings ]],
copy_large_opened_blueprint=#{} --[[@as defines.input_action.copy_large_opened_blueprint ]],
copy_large_opened_item=#{} --[[@as defines.input_action.copy_large_opened_item ]],
copy_opened_blueprint=#{} --[[@as defines.input_action.copy_opened_blueprint ]],
copy_opened_item=#{} --[[@as defines.input_action.copy_opened_item ]],
craft=#{} --[[@as defines.input_action.craft ]],
create_space_platform=#{} --[[@as defines.input_action.create_space_platform ]],
cursor_split=#{} --[[@as defines.input_action.cursor_split ]],
cursor_transfer=#{} --[[@as defines.input_action.cursor_transfer ]],
custom_input=#{} --[[@as defines.input_action.custom_input ]],
cycle_blueprint_book_backwards=#{} --[[@as defines.input_action.cycle_blueprint_book_backwards ]],
cycle_blueprint_book_forwards=#{} --[[@as defines.input_action.cycle_blueprint_book_forwards ]],
cycle_quality_down=#{} --[[@as defines.input_action.cycle_quality_down ]],
cycle_quality_up=#{} --[[@as defines.input_action.cycle_quality_up ]],
deconstruct=#{} --[[@as defines.input_action.deconstruct ]],
delete_blueprint_library=#{} --[[@as defines.input_action.delete_blueprint_library ]],
delete_blueprint_record=#{} --[[@as defines.input_action.delete_blueprint_record ]],
delete_custom_tag=#{} --[[@as defines.input_action.delete_custom_tag ]],
delete_logistic_group=#{} --[[@as defines.input_action.delete_logistic_group ]],
delete_permission_group=#{} --[[@as defines.input_action.delete_permission_group ]],
delete_space_platform=#{} --[[@as defines.input_action.delete_space_platform ]],
destroy_item=#{} --[[@as defines.input_action.destroy_item ]],
destroy_opened_item=#{} --[[@as defines.input_action.destroy_opened_item ]],
disconnect_rolling_stock=#{} --[[@as defines.input_action.disconnect_rolling_stock ]],
drag_decider_combinator_condition=#{} --[[@as defines.input_action.drag_decider_combinator_condition ]],
drag_decider_combinator_output=#{} --[[@as defines.input_action.drag_decider_combinator_output ]],
drag_train_schedule=#{} --[[@as defines.input_action.drag_train_schedule ]],
drag_train_schedule_interrupt=#{} --[[@as defines.input_action.drag_train_schedule_interrupt ]],
drag_train_wait_condition=#{} --[[@as defines.input_action.drag_train_wait_condition ]],
drop_blueprint_record=#{} --[[@as defines.input_action.drop_blueprint_record ]],
drop_item=#{} --[[@as defines.input_action.drop_item ]],
edit_blueprint_tool_preview=#{} --[[@as defines.input_action.edit_blueprint_tool_preview ]],
edit_custom_tag=#{} --[[@as defines.input_action.edit_custom_tag ]],
edit_display_panel=#{} --[[@as defines.input_action.edit_display_panel ]],
edit_display_panel_always_show=#{} --[[@as defines.input_action.edit_display_panel_always_show ]],
edit_display_panel_icon=#{} --[[@as defines.input_action.edit_display_panel_icon ]],
edit_display_panel_parameters=#{} --[[@as defines.input_action.edit_display_panel_parameters ]],
edit_display_panel_show_in_chart=#{} --[[@as defines.input_action.edit_display_panel_show_in_chart ]],
edit_interrupt=#{} --[[@as defines.input_action.edit_interrupt ]],
edit_permission_group=#{} --[[@as defines.input_action.edit_permission_group ]],
edit_pin=#{} --[[@as defines.input_action.edit_pin ]],
enable_transitional_requests=#{} --[[@as defines.input_action.enable_transitional_requests ]],
export_blueprint=#{} --[[@as defines.input_action.export_blueprint ]],
fast_entity_split=#{} --[[@as defines.input_action.fast_entity_split ]],
fast_entity_transfer=#{} --[[@as defines.input_action.fast_entity_transfer ]],
flip_entity=#{} --[[@as defines.input_action.flip_entity ]],
flush_opened_entity_fluid=#{} --[[@as defines.input_action.flush_opened_entity_fluid ]],
flush_opened_entity_specific_fluid=#{} --[[@as defines.input_action.flush_opened_entity_specific_fluid ]],
go_to_train_station=#{} --[[@as defines.input_action.go_to_train_station ]],
grab_blueprint_record=#{} --[[@as defines.input_action.grab_blueprint_record ]],
gui_checked_state_changed=#{} --[[@as defines.input_action.gui_checked_state_changed ]],
gui_click=#{} --[[@as defines.input_action.gui_click ]],
gui_confirmed=#{} --[[@as defines.input_action.gui_confirmed ]],
gui_elem_changed=#{} --[[@as defines.input_action.gui_elem_changed ]],
gui_hover=#{} --[[@as defines.input_action.gui_hover ]],
gui_leave=#{} --[[@as defines.input_action.gui_leave ]],
gui_location_changed=#{} --[[@as defines.input_action.gui_location_changed ]],
gui_selected_tab_changed=#{} --[[@as defines.input_action.gui_selected_tab_changed ]],
gui_selection_state_changed=#{} --[[@as defines.input_action.gui_selection_state_changed ]],
gui_switch_state_changed=#{} --[[@as defines.input_action.gui_switch_state_changed ]],
gui_text_changed=#{} --[[@as defines.input_action.gui_text_changed ]],
gui_value_changed=#{} --[[@as defines.input_action.gui_value_changed ]],
import_blueprint=#{} --[[@as defines.input_action.import_blueprint ]],
import_blueprint_string=#{} --[[@as defines.input_action.import_blueprint_string ]],
import_blueprints_filtered=#{} --[[@as defines.input_action.import_blueprints_filtered ]],
import_permissions_string=#{} --[[@as defines.input_action.import_permissions_string ]],
instantly_create_space_platform=#{} --[[@as defines.input_action.instantly_create_space_platform ]],
inventory_split=#{} --[[@as defines.input_action.inventory_split ]],
inventory_transfer=#{} --[[@as defines.input_action.inventory_transfer ]],
land_at_planet=#{} --[[@as defines.input_action.land_at_planet ]],
launch_rocket=#{} --[[@as defines.input_action.launch_rocket ]],
lua_shortcut=#{} --[[@as defines.input_action.lua_shortcut ]],
map_editor_action=#{} --[[@as defines.input_action.map_editor_action ]],
market_offer=#{} --[[@as defines.input_action.market_offer ]],
mod_settings_changed=#{} --[[@as defines.input_action.mod_settings_changed ]],
modify_decider_combinator_condition=#{} --[[@as defines.input_action.modify_decider_combinator_condition ]],
modify_decider_combinator_output=#{} --[[@as defines.input_action.modify_decider_combinator_output ]],
move_research=#{} --[[@as defines.input_action.move_research ]],
open_achievements_gui=#{} --[[@as defines.input_action.open_achievements_gui ]],
open_blueprint_library_gui=#{} --[[@as defines.input_action.open_blueprint_library_gui ]],
open_blueprint_record=#{} --[[@as defines.input_action.open_blueprint_record ]],
open_bonus_gui=#{} --[[@as defines.input_action.open_bonus_gui ]],
open_character_gui=#{} --[[@as defines.input_action.open_character_gui ]],
open_current_vehicle_gui=#{} --[[@as defines.input_action.open_current_vehicle_gui ]],
open_equipment=#{} --[[@as defines.input_action.open_equipment ]],
open_global_electric_network_gui=#{} --[[@as defines.input_action.open_global_electric_network_gui ]],
open_gui=#{} --[[@as defines.input_action.open_gui ]],
open_item=#{} --[[@as defines.input_action.open_item ]],
open_logistics_gui=#{} --[[@as defines.input_action.open_logistics_gui ]],
open_mod_item=#{} --[[@as defines.input_action.open_mod_item ]],
open_new_platform_button_from_rocket_silo=#{} --[[@as defines.input_action.open_new_platform_button_from_rocket_silo ]],
open_opened_entity_grid=#{} --[[@as defines.input_action.open_opened_entity_grid ]],
open_parent_of_opened_item=#{} --[[@as defines.input_action.open_parent_of_opened_item ]],
open_production_gui=#{} --[[@as defines.input_action.open_production_gui ]],
open_train_gui=#{} --[[@as defines.input_action.open_train_gui ]],
open_train_station_gui=#{} --[[@as defines.input_action.open_train_station_gui ]],
open_trains_gui=#{} --[[@as defines.input_action.open_trains_gui ]],
parametrise_blueprint=#{} --[[@as defines.input_action.parametrise_blueprint ]],
paste_entity_settings=#{} --[[@as defines.input_action.paste_entity_settings ]],
pin_alert_group=#{} --[[@as defines.input_action.pin_alert_group ]],
pin_custom_alert=#{} --[[@as defines.input_action.pin_custom_alert ]],
pin_search_result=#{} --[[@as defines.input_action.pin_search_result ]],
pipette=#{} --[[@as defines.input_action.pipette ]],
place_equipment=#{} --[[@as defines.input_action.place_equipment ]],
quick_bar_pick_slot=#{} --[[@as defines.input_action.quick_bar_pick_slot ]],
quick_bar_set_selected_page=#{} --[[@as defines.input_action.quick_bar_set_selected_page ]],
quick_bar_set_slot=#{} --[[@as defines.input_action.quick_bar_set_slot ]],
reassign_blueprint=#{} --[[@as defines.input_action.reassign_blueprint ]],
redo=#{} --[[@as defines.input_action.redo ]],
remote_view_entity=#{} --[[@as defines.input_action.remote_view_entity ]],
remote_view_surface=#{} --[[@as defines.input_action.remote_view_surface ]],
remove_cables=#{} --[[@as defines.input_action.remove_cables ]],
remove_decider_combinator_condition=#{} --[[@as defines.input_action.remove_decider_combinator_condition ]],
remove_decider_combinator_output=#{} --[[@as defines.input_action.remove_decider_combinator_output ]],
remove_logistic_section=#{} --[[@as defines.input_action.remove_logistic_section ]],
remove_pin=#{} --[[@as defines.input_action.remove_pin ]],
remove_train_interrupt=#{} --[[@as defines.input_action.remove_train_interrupt ]],
remove_train_station=#{} --[[@as defines.input_action.remove_train_station ]],
rename_interrupt=#{} --[[@as defines.input_action.rename_interrupt ]],
rename_space_platform=#{} --[[@as defines.input_action.rename_space_platform ]],
reorder_logistic_section=#{} --[[@as defines.input_action.reorder_logistic_section ]],
request_missing_construction_materials=#{} --[[@as defines.input_action.request_missing_construction_materials ]],
reset_assembling_machine=#{} --[[@as defines.input_action.reset_assembling_machine ]],
reverse_select_area=#{} --[[@as defines.input_action.reverse_select_area ]],
rotate_entity=#{} --[[@as defines.input_action.rotate_entity ]],
select_area=#{} --[[@as defines.input_action.select_area ]],
select_asteroid_chunk_slot=#{} --[[@as defines.input_action.select_asteroid_chunk_slot ]],
select_blueprint_entities=#{} --[[@as defines.input_action.select_blueprint_entities ]],
select_entity_filter_slot=#{} --[[@as defines.input_action.select_entity_filter_slot ]],
select_entity_slot=#{} --[[@as defines.input_action.select_entity_slot ]],
select_item_filter=#{} --[[@as defines.input_action.select_item_filter ]],
select_mapper_slot_from=#{} --[[@as defines.input_action.select_mapper_slot_from ]],
select_mapper_slot_to=#{} --[[@as defines.input_action.select_mapper_slot_to ]],
select_next_valid_gun=#{} --[[@as defines.input_action.select_next_valid_gun ]],
select_tile_slot=#{} --[[@as defines.input_action.select_tile_slot ]],
send_spidertron=#{} --[[@as defines.input_action.send_spidertron ]],
send_stack_to_trash=#{} --[[@as defines.input_action.send_stack_to_trash ]],
send_stacks_to_trash=#{} --[[@as defines.input_action.send_stacks_to_trash ]],
send_train_to_pin_target=#{} --[[@as defines.input_action.send_train_to_pin_target ]],
set_behavior_mode=#{} --[[@as defines.input_action.set_behavior_mode ]],
set_car_weapons_control=#{} --[[@as defines.input_action.set_car_weapons_control ]],
set_cheat_mode_quality=#{} --[[@as defines.input_action.set_cheat_mode_quality ]],
set_circuit_condition=#{} --[[@as defines.input_action.set_circuit_condition ]],
set_circuit_mode_of_operation=#{} --[[@as defines.input_action.set_circuit_mode_of_operation ]],
set_combinator_description=#{} --[[@as defines.input_action.set_combinator_description ]],
set_copy_color_from_train_stop=#{} --[[@as defines.input_action.set_copy_color_from_train_stop ]],
set_deconstruction_item_tile_selection_mode=#{} --[[@as defines.input_action.set_deconstruction_item_tile_selection_mode ]],
set_deconstruction_item_trees_and_rocks_only=#{} --[[@as defines.input_action.set_deconstruction_item_trees_and_rocks_only ]],
set_entity_color=#{} --[[@as defines.input_action.set_entity_color ]],
set_entity_energy_property=#{} --[[@as defines.input_action.set_entity_energy_property ]],
set_filter=#{} --[[@as defines.input_action.set_filter ]],
set_ghost_cursor=#{} --[[@as defines.input_action.set_ghost_cursor ]],
set_heat_interface_mode=#{} --[[@as defines.input_action.set_heat_interface_mode ]],
set_heat_interface_temperature=#{} --[[@as defines.input_action.set_heat_interface_temperature ]],
set_infinity_container_filter_item=#{} --[[@as defines.input_action.set_infinity_container_filter_item ]],
set_infinity_container_remove_unfiltered_items=#{} --[[@as defines.input_action.set_infinity_container_remove_unfiltered_items ]],
set_infinity_pipe_filter=#{} --[[@as defines.input_action.set_infinity_pipe_filter ]],
set_inserter_max_stack_size=#{} --[[@as defines.input_action.set_inserter_max_stack_size ]],
set_inventory_bar=#{} --[[@as defines.input_action.set_inventory_bar ]],
set_lamp_always_on=#{} --[[@as defines.input_action.set_lamp_always_on ]],
set_linked_container_link_i_d=#{} --[[@as defines.input_action.set_linked_container_link_i_d ]],
set_logistic_filter_item=#{} --[[@as defines.input_action.set_logistic_filter_item ]],
set_logistic_network_name=#{} --[[@as defines.input_action.set_logistic_network_name ]],
set_logistic_section_active=#{} --[[@as defines.input_action.set_logistic_section_active ]],
set_player_color=#{} --[[@as defines.input_action.set_player_color ]],
set_pump_fluid_filter=#{} --[[@as defines.input_action.set_pump_fluid_filter ]],
set_request_from_buffers=#{} --[[@as defines.input_action.set_request_from_buffers ]],
set_research_finished_stops_game=#{} --[[@as defines.input_action.set_research_finished_stops_game ]],
set_rocket_silo_send_to_orbit_automated_mode=#{} --[[@as defines.input_action.set_rocket_silo_send_to_orbit_automated_mode ]],
set_schedule_record_allow_unloading=#{} --[[@as defines.input_action.set_schedule_record_allow_unloading ]],
set_signal=#{} --[[@as defines.input_action.set_signal ]],
set_splitter_priority=#{} --[[@as defines.input_action.set_splitter_priority ]],
set_spoil_priority=#{} --[[@as defines.input_action.set_spoil_priority ]],
set_train_stop_priority=#{} --[[@as defines.input_action.set_train_stop_priority ]],
set_train_stopped=#{} --[[@as defines.input_action.set_train_stopped ]],
set_trains_limit=#{} --[[@as defines.input_action.set_trains_limit ]],
set_turret_ignore_unlisted=#{} --[[@as defines.input_action.set_turret_ignore_unlisted ]],
set_use_inserter_filters=#{} --[[@as defines.input_action.set_use_inserter_filters ]],
set_vehicle_automatic_targeting_parameters=#{} --[[@as defines.input_action.set_vehicle_automatic_targeting_parameters ]],
setup_assembling_machine=#{} --[[@as defines.input_action.setup_assembling_machine ]],
setup_blueprint=#{} --[[@as defines.input_action.setup_blueprint ]],
setup_single_blueprint_record=#{} --[[@as defines.input_action.setup_single_blueprint_record ]],
spawn_item=#{} --[[@as defines.input_action.spawn_item ]],
spectator_change_surface=#{} --[[@as defines.input_action.spectator_change_surface ]],
stack_split=#{} --[[@as defines.input_action.stack_split ]],
stack_transfer=#{} --[[@as defines.input_action.stack_transfer ]],
start_repair=#{} --[[@as defines.input_action.start_repair ]],
start_research=#{} --[[@as defines.input_action.start_research ]],
start_walking=#{} --[[@as defines.input_action.start_walking ]],
stop_drag_build=#{} --[[@as defines.input_action.stop_drag_build ]],
swap_logistic_filter_items=#{} --[[@as defines.input_action.swap_logistic_filter_items ]],
switch_connect_to_logistic_network=#{} --[[@as defines.input_action.switch_connect_to_logistic_network ]],
switch_constant_combinator_state=#{} --[[@as defines.input_action.switch_constant_combinator_state ]],
switch_inserter_filter_mode_state=#{} --[[@as defines.input_action.switch_inserter_filter_mode_state ]],
switch_mining_drill_filter_mode_state=#{} --[[@as defines.input_action.switch_mining_drill_filter_mode_state ]],
switch_power_switch_state=#{} --[[@as defines.input_action.switch_power_switch_state ]],
take_equipment=#{} --[[@as defines.input_action.take_equipment ]],
toggle_artillery_auto_targeting=#{} --[[@as defines.input_action.toggle_artillery_auto_targeting ]],
toggle_deconstruction_item_entity_filter_mode=#{} --[[@as defines.input_action.toggle_deconstruction_item_entity_filter_mode ]],
toggle_deconstruction_item_tile_filter_mode=#{} --[[@as defines.input_action.toggle_deconstruction_item_tile_filter_mode ]],
toggle_driving=#{} --[[@as defines.input_action.toggle_driving ]],
toggle_enable_vehicle_logistics_while_moving=#{} --[[@as defines.input_action.toggle_enable_vehicle_logistics_while_moving ]],
toggle_entity_logistic_requests=#{} --[[@as defines.input_action.toggle_entity_logistic_requests ]],
toggle_equipment_movement_bonus=#{} --[[@as defines.input_action.toggle_equipment_movement_bonus ]],
toggle_map_editor=#{} --[[@as defines.input_action.toggle_map_editor ]],
toggle_personal_logistic_requests=#{} --[[@as defines.input_action.toggle_personal_logistic_requests ]],
toggle_personal_roboport=#{} --[[@as defines.input_action.toggle_personal_roboport ]],
toggle_selected_entity=#{} --[[@as defines.input_action.toggle_selected_entity ]],
toggle_show_entity_info=#{} --[[@as defines.input_action.toggle_show_entity_info ]],
translate_string=#{} --[[@as defines.input_action.translate_string ]],
trash_not_requested_items=#{} --[[@as defines.input_action.trash_not_requested_items ]],
undo=#{} --[[@as defines.input_action.undo ]],
upgrade=#{} --[[@as defines.input_action.upgrade ]],
upgrade_opened_blueprint_by_item=#{} --[[@as defines.input_action.upgrade_opened_blueprint_by_item ]],
upgrade_opened_blueprint_by_record=#{} --[[@as defines.input_action.upgrade_opened_blueprint_by_record ]],
use_item=#{} --[[@as defines.input_action.use_item ]],
wire_dragging=#{} --[[@as defines.input_action.wire_dragging ]],
write_to_console=#{} --[[@as defines.input_action.write_to_console ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.input_method)
---@enum defines.input_method
defines.input_method={
game_controller=#{} --[[@as defines.input_method.game_controller ]],
keyboard_and_mouse=#{} --[[@as defines.input_method.keyboard_and_mouse ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.inventory)
---@enum defines.inventory
defines.inventory={
artillery_turret_ammo=#{} --[[@as defines.inventory.artillery_turret_ammo ]],
artillery_wagon_ammo=#{} --[[@as defines.inventory.artillery_wagon_ammo ]],
assembling_machine_dump=#{} --[[@as defines.inventory.assembling_machine_dump ]],
assembling_machine_input=#{} --[[@as defines.inventory.assembling_machine_input ]],
assembling_machine_modules=#{} --[[@as defines.inventory.assembling_machine_modules ]],
assembling_machine_output=#{} --[[@as defines.inventory.assembling_machine_output ]],
beacon_modules=#{} --[[@as defines.inventory.beacon_modules ]],
burnt_result=#{} --[[@as defines.inventory.burnt_result ]],
car_ammo=#{} --[[@as defines.inventory.car_ammo ]],
car_trunk=#{} --[[@as defines.inventory.car_trunk ]],
cargo_landing_pad_main=#{} --[[@as defines.inventory.cargo_landing_pad_main ]],
cargo_landing_pad_trash=#{} --[[@as defines.inventory.cargo_landing_pad_trash ]],
cargo_unit=#{} --[[@as defines.inventory.cargo_unit ]],
cargo_wagon=#{} --[[@as defines.inventory.cargo_wagon ]],
character_ammo=#{} --[[@as defines.inventory.character_ammo ]],
character_armor=#{} --[[@as defines.inventory.character_armor ]],
character_corpse=#{} --[[@as defines.inventory.character_corpse ]],
character_guns=#{} --[[@as defines.inventory.character_guns ]],
character_main=#{} --[[@as defines.inventory.character_main ]],
character_trash=#{} --[[@as defines.inventory.character_trash ]],
character_vehicle=#{} --[[@as defines.inventory.character_vehicle ]],
chest=#{} --[[@as defines.inventory.chest ]],
editor_ammo=#{} --[[@as defines.inventory.editor_ammo ]],
editor_armor=#{} --[[@as defines.inventory.editor_armor ]],
editor_guns=#{} --[[@as defines.inventory.editor_guns ]],
editor_main=#{} --[[@as defines.inventory.editor_main ]],
fuel=#{} --[[@as defines.inventory.fuel ]],
furnace_modules=#{} --[[@as defines.inventory.furnace_modules ]],
furnace_result=#{} --[[@as defines.inventory.furnace_result ]],
furnace_source=#{} --[[@as defines.inventory.furnace_source ]],
god_main=#{} --[[@as defines.inventory.god_main ]],
hub_main=#{} --[[@as defines.inventory.hub_main ]],
hub_trash=#{} --[[@as defines.inventory.hub_trash ]],
item_main=#{} --[[@as defines.inventory.item_main ]],
lab_input=#{} --[[@as defines.inventory.lab_input ]],
lab_modules=#{} --[[@as defines.inventory.lab_modules ]],
logistic_container_trash=#{} --[[@as defines.inventory.logistic_container_trash ]],
mining_drill_modules=#{} --[[@as defines.inventory.mining_drill_modules ]],
roboport_material=#{} --[[@as defines.inventory.roboport_material ]],
roboport_robot=#{} --[[@as defines.inventory.roboport_robot ]],
robot_cargo=#{} --[[@as defines.inventory.robot_cargo ]],
robot_repair=#{} --[[@as defines.inventory.robot_repair ]],
rocket_silo_input=#{} --[[@as defines.inventory.rocket_silo_input ]],
rocket_silo_modules=#{} --[[@as defines.inventory.rocket_silo_modules ]],
rocket_silo_output=#{} --[[@as defines.inventory.rocket_silo_output ]],
rocket_silo_rocket=#{} --[[@as defines.inventory.rocket_silo_rocket ]],
rocket_silo_trash=#{} --[[@as defines.inventory.rocket_silo_trash ]],
spider_ammo=#{} --[[@as defines.inventory.spider_ammo ]],
spider_trash=#{} --[[@as defines.inventory.spider_trash ]],
spider_trunk=#{} --[[@as defines.inventory.spider_trunk ]],
turret_ammo=#{} --[[@as defines.inventory.turret_ammo ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.logistic_member_index)
---@enum defines.logistic_member_index
defines.logistic_member_index={
character_provider=#{} --[[@as defines.logistic_member_index.character_provider ]],
character_requester=#{} --[[@as defines.logistic_member_index.character_requester ]],
character_storage=#{} --[[@as defines.logistic_member_index.character_storage ]],
generic_on_off_behavior=#{} --[[@as defines.logistic_member_index.generic_on_off_behavior ]],
logistic_container=#{} --[[@as defines.logistic_member_index.logistic_container ]],
spidertron_requester=#{} --[[@as defines.logistic_member_index.spidertron_requester ]],
vehicle_storage=#{} --[[@as defines.logistic_member_index.vehicle_storage ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.logistic_mode)
---@enum defines.logistic_mode
defines.logistic_mode={
active_provider=#{} --[[@as defines.logistic_mode.active_provider ]],
buffer=#{} --[[@as defines.logistic_mode.buffer ]],
none=#{} --[[@as defines.logistic_mode.none ]],
passive_provider=#{} --[[@as defines.logistic_mode.passive_provider ]],
requester=#{} --[[@as defines.logistic_mode.requester ]],
storage=#{} --[[@as defines.logistic_mode.storage ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.logistic_section_type)
---@enum defines.logistic_section_type
defines.logistic_section_type={
circuit_controlled=#{} --[[@as defines.logistic_section_type.circuit_controlled ]],
manual=#{} --[[@as defines.logistic_section_type.manual ]],
---Used by space platform hubs.
request_missing_materials_controlled=#{} --[[@as defines.logistic_section_type.request_missing_materials_controlled ]],
---Used by rocket silos.
transitional_request_controlled=#{} --[[@as defines.logistic_section_type.transitional_request_controlled ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.mouse_button_type)
---@enum defines.mouse_button_type
defines.mouse_button_type={
left=#{} --[[@as defines.mouse_button_type.left ]],
middle=#{} --[[@as defines.mouse_button_type.middle ]],
none=#{} --[[@as defines.mouse_button_type.none ]],
right=#{} --[[@as defines.mouse_button_type.right ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.moving_state)
---@enum defines.moving_state
defines.moving_state={
adaptive=#{} --[[@as defines.moving_state.adaptive ]],
moving=#{} --[[@as defines.moving_state.moving ]],
stale=#{} --[[@as defines.moving_state.stale ]],
stuck=#{} --[[@as defines.moving_state.stuck ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.print_skip)
---@enum defines.print_skip
defines.print_skip={
---Print will be skipped if same text was recently printed (within last 60 ticks). Used by most game messages.
if_redundant=#{} --[[@as defines.print_skip.if_redundant ]],
---Print will be skipped if same text is still visible (printed within last 1152 ticks). Used by some notifications.
if_visible=#{} --[[@as defines.print_skip.if_visible ]],
---Print will not be skipped.
never=#{} --[[@as defines.print_skip.never ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.print_sound)
---@enum defines.print_sound
defines.print_sound={
always=#{} --[[@as defines.print_sound.always ]],
never=#{} --[[@as defines.print_sound.never ]],
use_player_settings=#{} --[[@as defines.print_sound.use_player_settings ]],
}
do
---This define describes all top-level prototypes and their associated subtypes. It is organized as a lookup table, meaning the values of all the defines is `0`. As an example, `defines.prototypes['entity']` looks like `{furnace=0, inserter=0, container=0, ...}`.
---
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes)
---@class defines.prototypes:__defines.prototypes
defines.prototypes={
}
end

---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.achievement)
---@enum defines.prototypes.achievement
defines.prototypes.achievement={
achievement=0,
['build-entity-achievement']=0,
['change-surface-achievement']=0,
['combat-robot-count-achievement']=0,
['complete-objective-achievement']=0,
['construct-with-robots-achievement']=0,
['create-platform-achievement']=0,
['deconstruct-with-robots-achievement']=0,
['deliver-by-robots-achievement']=0,
['deplete-resource-achievement']=0,
['destroy-cliff-achievement']=0,
['dont-build-entity-achievement']=0,
['dont-craft-manually-achievement']=0,
['dont-kill-manually-achievement']=0,
['dont-research-before-researching-achievement']=0,
['dont-use-entity-in-energy-production-achievement']=0,
['equip-armor-achievement']=0,
['group-attack-achievement']=0,
['kill-achievement']=0,
['module-transfer-achievement']=0,
['place-equipment-achievement']=0,
['player-damaged-achievement']=0,
['produce-achievement']=0,
['produce-per-hour-achievement']=0,
['research-achievement']=0,
['research-with-science-pack-achievement']=0,
['shoot-achievement']=0,
['space-connection-distance-traveled-achievement']=0,
['train-path-achievement']=0,
['use-item-achievement']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.active-trigger)
---@enum defines.prototypes.active_trigger
defines.prototypes['active-trigger']={
['chain-active-trigger']=0,
['delayed-active-trigger']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.airborne-pollutant)
---@enum defines.prototypes.airborne_pollutant
defines.prototypes['airborne-pollutant']={
['airborne-pollutant']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.ambient-sound)
---@enum defines.prototypes.ambient_sound
defines.prototypes['ambient-sound']={
['ambient-sound']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.ammo-category)
---@enum defines.prototypes.ammo_category
defines.prototypes['ammo-category']={
['ammo-category']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.animation)
---@enum defines.prototypes.animation
defines.prototypes.animation={
animation=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.asteroid-chunk)
---@enum defines.prototypes.asteroid_chunk
defines.prototypes['asteroid-chunk']={
['asteroid-chunk']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.autoplace-control)
---@enum defines.prototypes.autoplace_control
defines.prototypes['autoplace-control']={
['autoplace-control']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.burner-usage)
---@enum defines.prototypes.burner_usage
defines.prototypes['burner-usage']={
['burner-usage']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.collision-layer)
---@enum defines.prototypes.collision_layer
defines.prototypes['collision-layer']={
['collision-layer']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.custom-event)
---@enum defines.prototypes.custom_event
defines.prototypes['custom-event']={
['custom-event']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.custom-input)
---@enum defines.prototypes.custom_input
defines.prototypes['custom-input']={
['custom-input']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.damage-type)
---@enum defines.prototypes.damage_type
defines.prototypes['damage-type']={
['damage-type']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.decorative)
---@enum defines.prototypes.decorative
defines.prototypes.decorative={
['optimized-decorative']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.deliver-category)
---@enum defines.prototypes.deliver_category
defines.prototypes['deliver-category']={
['deliver-category']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.deliver-impact-combination)
---@enum defines.prototypes.deliver_impact_combination
defines.prototypes['deliver-impact-combination']={
['deliver-impact-combination']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.editor-controller)
---@enum defines.prototypes.editor_controller
defines.prototypes['editor-controller']={
['editor-controller']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.entity)
---@enum defines.prototypes.entity
defines.prototypes.entity={
accumulator=0,
['agricultural-tower']=0,
['ammo-turret']=0,
['arithmetic-combinator']=0,
arrow=0,
['artillery-flare']=0,
['artillery-projectile']=0,
['artillery-turret']=0,
['artillery-wagon']=0,
['assembling-machine']=0,
asteroid=0,
['asteroid-collector']=0,
beacon=0,
beam=0,
boiler=0,
['burner-generator']=0,
['capture-robot']=0,
car=0,
['cargo-bay']=0,
['cargo-landing-pad']=0,
['cargo-pod']=0,
['cargo-wagon']=0,
character=0,
['character-corpse']=0,
cliff=0,
['combat-robot']=0,
['constant-combinator']=0,
['construction-robot']=0,
container=0,
corpse=0,
['crafting-machine']=0,
['curved-rail-a']=0,
['curved-rail-b']=0,
['decider-combinator']=0,
['deconstructible-tile-proxy']=0,
['display-panel']=0,
['electric-energy-interface']=0,
['electric-pole']=0,
['electric-turret']=0,
['elevated-curved-rail-a']=0,
['elevated-curved-rail-b']=0,
['elevated-half-diagonal-rail']=0,
['elevated-straight-rail']=0,
['entity-ghost']=0,
explosion=0,
fire=0,
fish=0,
['fluid-turret']=0,
['fluid-wagon']=0,
furnace=0,
['fusion-generator']=0,
['fusion-reactor']=0,
gate=0,
generator=0,
['half-diagonal-rail']=0,
['heat-interface']=0,
['heat-pipe']=0,
['highlight-box']=0,
['infinity-container']=0,
['infinity-pipe']=0,
inserter=0,
['item-entity']=0,
['item-request-proxy']=0,
lab=0,
lamp=0,
['land-mine']=0,
['lane-splitter']=0,
['legacy-curved-rail']=0,
['legacy-straight-rail']=0,
lightning=0,
['lightning-attractor']=0,
['linked-belt']=0,
['linked-container']=0,
loader=0,
['loader-1x1']=0,
locomotive=0,
['logistic-container']=0,
['logistic-robot']=0,
market=0,
['mining-drill']=0,
['offshore-pump']=0,
['particle-source']=0,
pipe=0,
['pipe-to-ground']=0,
plant=0,
['player-port']=0,
['power-switch']=0,
['programmable-speaker']=0,
projectile=0,
pump=0,
radar=0,
rail=0,
['rail-chain-signal']=0,
['rail-ramp']=0,
['rail-remnants']=0,
['rail-signal']=0,
['rail-support']=0,
reactor=0,
resource=0,
roboport=0,
['rocket-silo']=0,
['rocket-silo-rocket']=0,
['rocket-silo-rocket-shadow']=0,
['rolling-stock']=0,
segment=0,
['segmented-unit']=0,
['selector-combinator']=0,
['simple-entity']=0,
['simple-entity-with-force']=0,
['simple-entity-with-owner']=0,
['smoke-with-trigger']=0,
['solar-panel']=0,
['space-platform-hub']=0,
['speech-bubble']=0,
['spider-leg']=0,
['spider-unit']=0,
['spider-vehicle']=0,
splitter=0,
sticker=0,
['storage-tank']=0,
['straight-rail']=0,
stream=0,
['temporary-container']=0,
thruster=0,
['tile-ghost']=0,
['train-stop']=0,
['transport-belt']=0,
['transport-belt-connectable']=0,
tree=0,
turret=0,
['underground-belt']=0,
unit=0,
['unit-spawner']=0,
vehicle=0,
wall=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.equipment)
---@enum defines.prototypes.equipment
defines.prototypes.equipment={
['active-defense-equipment']=0,
['battery-equipment']=0,
['belt-immunity-equipment']=0,
['energy-shield-equipment']=0,
['equipment-ghost']=0,
['generator-equipment']=0,
['inventory-bonus-equipment']=0,
['movement-bonus-equipment']=0,
['night-vision-equipment']=0,
['roboport-equipment']=0,
['solar-panel-equipment']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.equipment-category)
---@enum defines.prototypes.equipment_category
defines.prototypes['equipment-category']={
['equipment-category']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.equipment-grid)
---@enum defines.prototypes.equipment_grid
defines.prototypes['equipment-grid']={
['equipment-grid']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.fluid)
---@enum defines.prototypes.fluid
defines.prototypes.fluid={
fluid=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.font)
---@enum defines.prototypes.font
defines.prototypes.font={
font=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.fuel-category)
---@enum defines.prototypes.fuel_category
defines.prototypes['fuel-category']={
['fuel-category']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.god-controller)
---@enum defines.prototypes.god_controller
defines.prototypes['god-controller']={
['god-controller']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.gui-style)
---@enum defines.prototypes.gui_style
defines.prototypes['gui-style']={
['gui-style']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.impact-category)
---@enum defines.prototypes.impact_category
defines.prototypes['impact-category']={
['impact-category']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.item)
---@enum defines.prototypes.item
defines.prototypes.item={
ammo=0,
armor=0,
blueprint=0,
['blueprint-book']=0,
capsule=0,
['copy-paste-tool']=0,
['deconstruction-item']=0,
gun=0,
item=0,
['item-with-entity-data']=0,
['item-with-inventory']=0,
['item-with-label']=0,
['item-with-tags']=0,
module=0,
['rail-planner']=0,
['repair-tool']=0,
['selection-tool']=0,
['space-platform-starter-pack']=0,
['spidertron-remote']=0,
tool=0,
['upgrade-item']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.item-group)
---@enum defines.prototypes.item_group
defines.prototypes['item-group']={
['item-group']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.item-subgroup)
---@enum defines.prototypes.item_subgroup
defines.prototypes['item-subgroup']={
['item-subgroup']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.map-gen-presets)
---@enum defines.prototypes.map_gen_presets
defines.prototypes['map-gen-presets']={
['map-gen-presets']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.map-settings)
---@enum defines.prototypes.map_settings
defines.prototypes['map-settings']={
['map-settings']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.module-category)
---@enum defines.prototypes.module_category
defines.prototypes['module-category']={
['module-category']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.mouse-cursor)
---@enum defines.prototypes.mouse_cursor
defines.prototypes['mouse-cursor']={
['mouse-cursor']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.noise-expression)
---@enum defines.prototypes.noise_expression
defines.prototypes['noise-expression']={
['noise-expression']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.noise-function)
---@enum defines.prototypes.noise_function
defines.prototypes['noise-function']={
['noise-function']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.particle)
---@enum defines.prototypes.particle
defines.prototypes.particle={
['optimized-particle']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.procession)
---@enum defines.prototypes.procession
defines.prototypes.procession={
procession=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.procession-layer-inheritance-group)
---@enum defines.prototypes.procession_layer_inheritance_group
defines.prototypes['procession-layer-inheritance-group']={
['procession-layer-inheritance-group']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.quality)
---@enum defines.prototypes.quality
defines.prototypes.quality={
quality=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.recipe)
---@enum defines.prototypes.recipe
defines.prototypes.recipe={
recipe=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.recipe-category)
---@enum defines.prototypes.recipe_category
defines.prototypes['recipe-category']={
['recipe-category']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.remote-controller)
---@enum defines.prototypes.remote_controller
defines.prototypes['remote-controller']={
['remote-controller']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.resource-category)
---@enum defines.prototypes.resource_category
defines.prototypes['resource-category']={
['resource-category']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.shortcut)
---@enum defines.prototypes.shortcut
defines.prototypes.shortcut={
shortcut=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.sound)
---@enum defines.prototypes.sound
defines.prototypes.sound={
sound=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.space-connection)
---@enum defines.prototypes.space_connection
defines.prototypes['space-connection']={
['space-connection']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.space-location)
---@enum defines.prototypes.space_location
defines.prototypes['space-location']={
planet=0,
['space-location']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.spectator-controller)
---@enum defines.prototypes.spectator_controller
defines.prototypes['spectator-controller']={
['spectator-controller']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.sprite)
---@enum defines.prototypes.sprite
defines.prototypes.sprite={
sprite=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.surface)
---@enum defines.prototypes.surface
defines.prototypes.surface={
surface=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.surface-property)
---@enum defines.prototypes.surface_property
defines.prototypes['surface-property']={
['surface-property']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.technology)
---@enum defines.prototypes.technology
defines.prototypes.technology={
technology=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.tile)
---@enum defines.prototypes.tile
defines.prototypes.tile={
tile=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.tile-effect)
---@enum defines.prototypes.tile_effect
defines.prototypes['tile-effect']={
['tile-effect']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.tips-and-tricks-item)
---@enum defines.prototypes.tips_and_tricks_item
defines.prototypes['tips-and-tricks-item']={
['tips-and-tricks-item']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.tips-and-tricks-item-category)
---@enum defines.prototypes.tips_and_tricks_item_category
defines.prototypes['tips-and-tricks-item-category']={
['tips-and-tricks-item-category']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.trigger-target-type)
---@enum defines.prototypes.trigger_target_type
defines.prototypes['trigger-target-type']={
['trigger-target-type']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.trivial-smoke)
---@enum defines.prototypes.trivial_smoke
defines.prototypes['trivial-smoke']={
['trivial-smoke']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.tutorial)
---@enum defines.prototypes.tutorial
defines.prototypes.tutorial={
tutorial=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.utility-constants)
---@enum defines.prototypes.utility_constants
defines.prototypes['utility-constants']={
['utility-constants']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.utility-sounds)
---@enum defines.prototypes.utility_sounds
defines.prototypes['utility-sounds']={
['utility-sounds']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.utility-sprites)
---@enum defines.prototypes.utility_sprites
defines.prototypes['utility-sprites']={
['utility-sprites']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.prototypes.virtual-signal)
---@enum defines.prototypes.virtual_signal
defines.prototypes['virtual-signal']={
['virtual-signal']=0,
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.rail_connection_direction)
---@enum defines.rail_connection_direction
defines.rail_connection_direction={
left=#{} --[[@as defines.rail_connection_direction.left ]],
none=#{} --[[@as defines.rail_connection_direction.none ]],
right=#{} --[[@as defines.rail_connection_direction.right ]],
straight=#{} --[[@as defines.rail_connection_direction.straight ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.rail_direction)
---@enum defines.rail_direction
defines.rail_direction={
back=#{} --[[@as defines.rail_direction.back ]],
front=#{} --[[@as defines.rail_direction.front ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.rail_layer)
---@enum defines.rail_layer
defines.rail_layer={
elevated=#{} --[[@as defines.rail_layer.elevated ]],
ground=#{} --[[@as defines.rail_layer.ground ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.relative_gui_position)
---@enum defines.relative_gui_position
defines.relative_gui_position={
bottom=#{} --[[@as defines.relative_gui_position.bottom ]],
left=#{} --[[@as defines.relative_gui_position.left ]],
right=#{} --[[@as defines.relative_gui_position.right ]],
top=#{} --[[@as defines.relative_gui_position.top ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.relative_gui_type)
---@enum defines.relative_gui_type
defines.relative_gui_type={
accumulator_gui=#{} --[[@as defines.relative_gui_type.accumulator_gui ]],
achievement_gui=#{} --[[@as defines.relative_gui_type.achievement_gui ]],
additional_entity_info_gui=#{} --[[@as defines.relative_gui_type.additional_entity_info_gui ]],
admin_gui=#{} --[[@as defines.relative_gui_type.admin_gui ]],
agriculture_tower_gui=#{} --[[@as defines.relative_gui_type.agriculture_tower_gui ]],
arithmetic_combinator_gui=#{} --[[@as defines.relative_gui_type.arithmetic_combinator_gui ]],
armor_gui=#{} --[[@as defines.relative_gui_type.armor_gui ]],
assembling_machine_gui=#{} --[[@as defines.relative_gui_type.assembling_machine_gui ]],
assembling_machine_select_recipe_gui=#{} --[[@as defines.relative_gui_type.assembling_machine_select_recipe_gui ]],
asteroid_collector_gui=#{} --[[@as defines.relative_gui_type.asteroid_collector_gui ]],
beacon_gui=#{} --[[@as defines.relative_gui_type.beacon_gui ]],
blueprint_book_gui=#{} --[[@as defines.relative_gui_type.blueprint_book_gui ]],
blueprint_library_gui=#{} --[[@as defines.relative_gui_type.blueprint_library_gui ]],
blueprint_setup_gui=#{} --[[@as defines.relative_gui_type.blueprint_setup_gui ]],
bonus_gui=#{} --[[@as defines.relative_gui_type.bonus_gui ]],
burner_equipment_gui=#{} --[[@as defines.relative_gui_type.burner_equipment_gui ]],
car_gui=#{} --[[@as defines.relative_gui_type.car_gui ]],
cargo_landing_pad_gui=#{} --[[@as defines.relative_gui_type.cargo_landing_pad_gui ]],
constant_combinator_gui=#{} --[[@as defines.relative_gui_type.constant_combinator_gui ]],
container_gui=#{} --[[@as defines.relative_gui_type.container_gui ]],
controller_gui=#{} --[[@as defines.relative_gui_type.controller_gui ]],
decider_combinator_gui=#{} --[[@as defines.relative_gui_type.decider_combinator_gui ]],
deconstruction_item_gui=#{} --[[@as defines.relative_gui_type.deconstruction_item_gui ]],
display_panel_gui=#{} --[[@as defines.relative_gui_type.display_panel_gui ]],
electric_energy_interface_gui=#{} --[[@as defines.relative_gui_type.electric_energy_interface_gui ]],
electric_network_gui=#{} --[[@as defines.relative_gui_type.electric_network_gui ]],
entity_variations_gui=#{} --[[@as defines.relative_gui_type.entity_variations_gui ]],
entity_with_energy_source_gui=#{} --[[@as defines.relative_gui_type.entity_with_energy_source_gui ]],
equipment_grid_gui=#{} --[[@as defines.relative_gui_type.equipment_grid_gui ]],
furnace_gui=#{} --[[@as defines.relative_gui_type.furnace_gui ]],
generic_on_off_entity_gui=#{} --[[@as defines.relative_gui_type.generic_on_off_entity_gui ]],
ghost_picker_gui=#{} --[[@as defines.relative_gui_type.ghost_picker_gui ]],
global_electric_network_gui=#{} --[[@as defines.relative_gui_type.global_electric_network_gui ]],
heat_interface_gui=#{} --[[@as defines.relative_gui_type.heat_interface_gui ]],
infinity_pipe_gui=#{} --[[@as defines.relative_gui_type.infinity_pipe_gui ]],
inserter_gui=#{} --[[@as defines.relative_gui_type.inserter_gui ]],
item_with_inventory_gui=#{} --[[@as defines.relative_gui_type.item_with_inventory_gui ]],
lab_gui=#{} --[[@as defines.relative_gui_type.lab_gui ]],
lamp_gui=#{} --[[@as defines.relative_gui_type.lamp_gui ]],
linked_container_gui=#{} --[[@as defines.relative_gui_type.linked_container_gui ]],
loader_gui=#{} --[[@as defines.relative_gui_type.loader_gui ]],
logistic_gui=#{} --[[@as defines.relative_gui_type.logistic_gui ]],
market_gui=#{} --[[@as defines.relative_gui_type.market_gui ]],
mining_drill_gui=#{} --[[@as defines.relative_gui_type.mining_drill_gui ]],
other_player_gui=#{} --[[@as defines.relative_gui_type.other_player_gui ]],
permissions_gui=#{} --[[@as defines.relative_gui_type.permissions_gui ]],
pick_stop_gui=#{} --[[@as defines.relative_gui_type.pick_stop_gui ]],
pipe_gui=#{} --[[@as defines.relative_gui_type.pipe_gui ]],
power_switch_gui=#{} --[[@as defines.relative_gui_type.power_switch_gui ]],
production_gui=#{} --[[@as defines.relative_gui_type.production_gui ]],
programmable_speaker_gui=#{} --[[@as defines.relative_gui_type.programmable_speaker_gui ]],
pump_gui=#{} --[[@as defines.relative_gui_type.pump_gui ]],
rail_signal_base_gui=#{} --[[@as defines.relative_gui_type.rail_signal_base_gui ]],
reactor_gui=#{} --[[@as defines.relative_gui_type.reactor_gui ]],
resource_entity_gui=#{} --[[@as defines.relative_gui_type.resource_entity_gui ]],
roboport_gui=#{} --[[@as defines.relative_gui_type.roboport_gui ]],
rocket_silo_gui=#{} --[[@as defines.relative_gui_type.rocket_silo_gui ]],
script_inventory_gui=#{} --[[@as defines.relative_gui_type.script_inventory_gui ]],
selector_combinator_gui=#{} --[[@as defines.relative_gui_type.selector_combinator_gui ]],
server_config_gui=#{} --[[@as defines.relative_gui_type.server_config_gui ]],
space_platform_hub_gui=#{} --[[@as defines.relative_gui_type.space_platform_hub_gui ]],
spider_vehicle_gui=#{} --[[@as defines.relative_gui_type.spider_vehicle_gui ]],
splitter_gui=#{} --[[@as defines.relative_gui_type.splitter_gui ]],
standalone_character_gui=#{} --[[@as defines.relative_gui_type.standalone_character_gui ]],
storage_tank_gui=#{} --[[@as defines.relative_gui_type.storage_tank_gui ]],
tile_variations_gui=#{} --[[@as defines.relative_gui_type.tile_variations_gui ]],
tips_and_tricks_gui=#{} --[[@as defines.relative_gui_type.tips_and_tricks_gui ]],
train_gui=#{} --[[@as defines.relative_gui_type.train_gui ]],
train_stop_gui=#{} --[[@as defines.relative_gui_type.train_stop_gui ]],
trains_gui=#{} --[[@as defines.relative_gui_type.trains_gui ]],
transport_belt_gui=#{} --[[@as defines.relative_gui_type.transport_belt_gui ]],
turret_gui=#{} --[[@as defines.relative_gui_type.turret_gui ]],
upgrade_item_gui=#{} --[[@as defines.relative_gui_type.upgrade_item_gui ]],
wall_gui=#{} --[[@as defines.relative_gui_type.wall_gui ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.render_mode)
---@enum defines.render_mode
defines.render_mode={
chart=#{} --[[@as defines.render_mode.chart ]],
chart_zoomed_in=#{} --[[@as defines.render_mode.chart_zoomed_in ]],
game=#{} --[[@as defines.render_mode.game ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.rich_text_setting)
---@enum defines.rich_text_setting
defines.rich_text_setting={
disabled=#{} --[[@as defines.rich_text_setting.disabled ]],
enabled=#{} --[[@as defines.rich_text_setting.enabled ]],
highlight=#{} --[[@as defines.rich_text_setting.highlight ]],
}
do
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.riding)
---@class defines.riding
defines.riding={
}
end

---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.riding.acceleration)
---@enum defines.riding.acceleration
defines.riding.acceleration={
accelerating=#{} --[[@as defines.riding.acceleration.accelerating ]],
braking=#{} --[[@as defines.riding.acceleration.braking ]],
nothing=#{} --[[@as defines.riding.acceleration.nothing ]],
reversing=#{} --[[@as defines.riding.acceleration.reversing ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.riding.direction)
---@enum defines.riding.direction
defines.riding.direction={
left=#{} --[[@as defines.riding.direction.left ]],
right=#{} --[[@as defines.riding.direction.right ]],
straight=#{} --[[@as defines.riding.direction.straight ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.robot_order_type)
---@enum defines.robot_order_type
defines.robot_order_type={
---Construct a ghost.
construct=#{} --[[@as defines.robot_order_type.construct ]],
---Deconstruct an entity.
deconstruct=#{} --[[@as defines.robot_order_type.deconstruct ]],
---Deliver an item.
deliver=#{} --[[@as defines.robot_order_type.deliver ]],
---Deliver specific items to an entity (item request proxy).
deliver_items=#{} --[[@as defines.robot_order_type.deliver_items ]],
---Explode a cliff.
explode_cliff=#{} --[[@as defines.robot_order_type.explode_cliff ]],
---Pickup an item.
pickup=#{} --[[@as defines.robot_order_type.pickup ]],
---Pickup items from an entity (item request proxy).
pickup_items=#{} --[[@as defines.robot_order_type.pickup_items ]],
---Repair an entity.
repair=#{} --[[@as defines.robot_order_type.repair ]],
---Upgrade an entity.
upgrade=#{} --[[@as defines.robot_order_type.upgrade ]],
}
---The various parts of the launch sequence of the rocket silo.
---
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.rocket_silo_status)
---@enum defines.rocket_silo_status
defines.rocket_silo_status={
---The next state is `rocket_ready` or if the rocket is destroyed in this state then the next state will be `lights_blinking_close`. The rocket is getting prepared for launch.
arms_advance=#{} --[[@as defines.rocket_silo_status.arms_advance ]],
---The next state is `rocket_flying` or if the rocket is destroyed in this state then the next state will be `lights_blinking_close`. The rocket is getting launched.
arms_retract=#{} --[[@as defines.rocket_silo_status.arms_retract ]],
---The rocket silo is crafting rocket parts. When there are enough rocket parts, the silo will switch into the `create_rocket` state.
building_rocket=#{} --[[@as defines.rocket_silo_status.building_rocket ]],
---The next state is `lights_blinking_open`. The rocket silo rocket entity gets created.
create_rocket=#{} --[[@as defines.rocket_silo_status.create_rocket ]],
---The next state is `building_rocket`.
doors_closing=#{} --[[@as defines.rocket_silo_status.doors_closing ]],
---The next state is `rocket_rising` or if the rocket is destroyed in this state then the next state will be `lights_blinking_close`. The rocket is getting prepared for launch.
doors_opened=#{} --[[@as defines.rocket_silo_status.doors_opened ]],
---The next state is `doors_opened`. The rocket is getting prepared for launch.
doors_opening=#{} --[[@as defines.rocket_silo_status.doors_opening ]],
---The next state is `arms_retract` or if the rocket is destroyed in this state then the next state will be `lights_blinking_close`. The rocket is getting launched.
engine_starting=#{} --[[@as defines.rocket_silo_status.engine_starting ]],
---The next state is `engine_starting` or if the rocket is destroyed in this state then the next state will be `lights_blinking_close`. The rocket is getting launched.
launch_started=#{} --[[@as defines.rocket_silo_status.launch_started ]],
---The next state is `launch_started`.
launch_starting=#{} --[[@as defines.rocket_silo_status.launch_starting ]],
---The next state is `doors_closing`.
lights_blinking_close=#{} --[[@as defines.rocket_silo_status.lights_blinking_close ]],
---The next state is `doors_opening`. The rocket is getting prepared for launch.
lights_blinking_open=#{} --[[@as defines.rocket_silo_status.lights_blinking_open ]],
---The next state is `lights_blinking_close`. The rocket is getting launched.
rocket_flying=#{} --[[@as defines.rocket_silo_status.rocket_flying ]],
---The rocket launch can be started by the player. When the launch is started, the silo switches into the `launch_starting` state.
rocket_ready=#{} --[[@as defines.rocket_silo_status.rocket_ready ]],
---The next state is `arms_advance` or if the rocket is destroyed in this state then the next state will be `lights_blinking_close`. The rocket is getting prepared for launch.
rocket_rising=#{} --[[@as defines.rocket_silo_status.rocket_rising ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.selection_mode)
---@enum defines.selection_mode
defines.selection_mode={
alt_reverse_select=#{} --[[@as defines.selection_mode.alt_reverse_select ]],
alt_select=#{} --[[@as defines.selection_mode.alt_select ]],
reverse_select=#{} --[[@as defines.selection_mode.reverse_select ]],
select=#{} --[[@as defines.selection_mode.select ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.shooting)
---@enum defines.shooting
defines.shooting={
not_shooting=#{} --[[@as defines.shooting.not_shooting ]],
shooting_enemies=#{} --[[@as defines.shooting.shooting_enemies ]],
shooting_selected=#{} --[[@as defines.shooting.shooting_selected ]],
}
---State of an ordinary rail signal.
---
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.signal_state)
---@enum defines.signal_state
defines.signal_state={
---Red.
closed=#{} --[[@as defines.signal_state.closed ]],
---Green.
open=#{} --[[@as defines.signal_state.open ]],
---Orange.
reserved=#{} --[[@as defines.signal_state.reserved ]],
---Red - From circuit network.
reserved_by_circuit_network=#{} --[[@as defines.signal_state.reserved_by_circuit_network ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.space_platform_state)
---@enum defines.space_platform_state
defines.space_platform_state={
---Doesn't have anywhere to go.
no_path=#{} --[[@as defines.space_platform_state.no_path ]],
---Waiting for a starter pack
no_schedule=#{} --[[@as defines.space_platform_state.no_schedule ]],
---Following the path.
on_the_path=#{} --[[@as defines.space_platform_state.on_the_path ]],
---Starter pack is on the way.
starter_pack_on_the_way=#{} --[[@as defines.space_platform_state.starter_pack_on_the_way ]],
---Starter pack was requested from the logistics system.
starter_pack_requested=#{} --[[@as defines.space_platform_state.starter_pack_requested ]],
---Waiting at a station.
waiting_at_station=#{} --[[@as defines.space_platform_state.waiting_at_station ]],
---Platform is ready to leave this planet and does not accept deliveries.
waiting_for_departure=#{} --[[@as defines.space_platform_state.waiting_for_departure ]],
---Waiting for a starter pack.
waiting_for_starter_pack=#{} --[[@as defines.space_platform_state.waiting_for_starter_pack ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.target_type)
---@enum defines.target_type
defines.target_type={
commandable=#{} --[[@as defines.target_type.commandable ]],
custom_chart_tag=#{} --[[@as defines.target_type.custom_chart_tag ]],
entity=#{} --[[@as defines.target_type.entity ]],
equipment=#{} --[[@as defines.target_type.equipment ]],
equipment_grid=#{} --[[@as defines.target_type.equipment_grid ]],
gui_element=#{} --[[@as defines.target_type.gui_element ]],
item=#{} --[[@as defines.target_type.item ]],
logistic_cell=#{} --[[@as defines.target_type.logistic_cell ]],
logistic_network=#{} --[[@as defines.target_type.logistic_network ]],
logistic_section=#{} --[[@as defines.target_type.logistic_section ]],
permission_group=#{} --[[@as defines.target_type.permission_group ]],
planet=#{} --[[@as defines.target_type.planet ]],
player=#{} --[[@as defines.target_type.player ]],
rail_path=#{} --[[@as defines.target_type.rail_path ]],
render_object=#{} --[[@as defines.target_type.render_object ]],
space_platform=#{} --[[@as defines.target_type.space_platform ]],
surface=#{} --[[@as defines.target_type.surface ]],
train=#{} --[[@as defines.target_type.train ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.train_state)
---@enum defines.train_state
defines.train_state={
---Braking before a rail signal.
arrive_signal=#{} --[[@as defines.train_state.arrive_signal ]],
---Braking before a station.
arrive_station=#{} --[[@as defines.train_state.arrive_station ]],
---Same as no_path but all candidate train stops are full
destination_full=#{} --[[@as defines.train_state.destination_full ]],
---Can move if user explicitly sits in and rides the train.
manual_control=#{} --[[@as defines.train_state.manual_control ]],
---Switched to manual control and has to stop.
manual_control_stop=#{} --[[@as defines.train_state.manual_control_stop ]],
---Has no path and is stopped.
no_path=#{} --[[@as defines.train_state.no_path ]],
---Doesn't have anywhere to go.
no_schedule=#{} --[[@as defines.train_state.no_schedule ]],
---Normal state -- following the path.
on_the_path=#{} --[[@as defines.train_state.on_the_path ]],
---Waiting at a signal.
wait_signal=#{} --[[@as defines.train_state.wait_signal ]],
---Waiting at a station.
wait_station=#{} --[[@as defines.train_state.wait_station ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.transport_line)
---@enum defines.transport_line
defines.transport_line={
left_line=#{} --[[@as defines.transport_line.left_line ]],
left_split_line=#{} --[[@as defines.transport_line.left_split_line ]],
left_underground_line=#{} --[[@as defines.transport_line.left_underground_line ]],
right_line=#{} --[[@as defines.transport_line.right_line ]],
right_split_line=#{} --[[@as defines.transport_line.right_split_line ]],
right_underground_line=#{} --[[@as defines.transport_line.right_underground_line ]],
secondary_left_line=#{} --[[@as defines.transport_line.secondary_left_line ]],
secondary_left_split_line=#{} --[[@as defines.transport_line.secondary_left_split_line ]],
secondary_right_line=#{} --[[@as defines.transport_line.secondary_right_line ]],
secondary_right_split_line=#{} --[[@as defines.transport_line.secondary_right_split_line ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.wire_connector_id)
---@enum defines.wire_connector_id
defines.wire_connector_id={
circuit_green=#{} --[[@as defines.wire_connector_id.circuit_green ]],
circuit_red=#{} --[[@as defines.wire_connector_id.circuit_red ]],
combinator_input_green=#{} --[[@as defines.wire_connector_id.combinator_input_green ]],
combinator_input_red=#{} --[[@as defines.wire_connector_id.combinator_input_red ]],
combinator_output_green=#{} --[[@as defines.wire_connector_id.combinator_output_green ]],
combinator_output_red=#{} --[[@as defines.wire_connector_id.combinator_output_red ]],
pole_copper=#{} --[[@as defines.wire_connector_id.pole_copper ]],
power_switch_left_copper=#{} --[[@as defines.wire_connector_id.power_switch_left_copper ]],
power_switch_right_copper=#{} --[[@as defines.wire_connector_id.power_switch_right_copper ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.wire_origin)
---@enum defines.wire_origin
defines.wire_origin={
player=#{} --[[@as defines.wire_origin.player ]],
radars=#{} --[[@as defines.wire_origin.radars ]],
script=#{} --[[@as defines.wire_origin.script ]],
}
---[View Documentation](https://lua-api.factorio.com/latest/defines.html#defines.wire_type)
---@enum defines.wire_type
defines.wire_type={
copper=#{} --[[@as defines.wire_type.copper ]],
green=#{} --[[@as defines.wire_type.green ]],
red=#{} --[[@as defines.wire_type.red ]],
}
